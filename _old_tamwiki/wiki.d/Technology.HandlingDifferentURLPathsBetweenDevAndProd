version=pmwiki-2.2.43 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4
author=tamara
charset=ISO-8859-1
csum=add category
ctime=1307042988
host=75.144.38.217
name=Technology.HandlingDifferentURLPathsBetweenDevAndProd
rev=5
targets=
text=[[#excerpt]]%0aI recently had a situation where I had some problems working with the navigation paths on my development system that was going into a different directory structure on my production machine. In this case, the development path was a few layers deep while the production path was at the `DocumentRoot.%0a[[#excerptend]]%0a%0a%0aThe way I resolved the issue was to apply a couple of things:%0a# create a virtual host that pointed to the development path%0a# update the @@/etc/hosts@@ file to include names for the virtual host%0a%0a!!Setting up your server for using virtual hosts%0a%0aMost apache installations come out of the box ready to support virtual hosts. They just need to be configured.%0a%0a%25notebox%25 If you are going to set up your apache server for virtual hosting, one thing to keep in mind is that you must use a virtual host for the default host; the information in the @@httpd.conf@@ file for `ServerName and `DocumentRoot is ignored.%0a%0a!!! Set up vhosts subdirectory%0aIf there isn't already, create a subdirectory to hold the various virtual host configuration files. This makes it easier to manage multiple virtual hosts without cluttering up the main @@httpd.conf@@ file:%0a%0a%0a          mkdir /etc/apache2/vhosts%0a%0ais one example of how to do this.%0a%0a!!!Modify the @@httpd.conf@@ file %0aYou will need to modify the @@httpd.conf@@ file to use virtual hosts by adding the following lines:%0a%0a(:nolinkwikiwords:) %0a         ## Virtual hosts%0a         NameVirtualHost *:80%0a%0a         %3cVirtualHost *:80>%0a         ServerName localhost%0a         DocumentRoot "/Library/WebServer/Documents"%0a         %3c/VirtualHost>%0a%0a         Include /etc/apache2/vhosts/*.conf%0a(:linkwikiwords:)%0a%0aThe last line will include all file from the vhosts directory that end in @@.conf@@.%0a%0a%25notebox%25 on OS X, the path to @@/etc@@ is really @@/private/etc@@.%0a%0a!!! Create the configuration file for your new vhost:%0a%0a         cd /etc/apache2/vhosts%0a         touch mysite.conf%0a%0a!!! Configure the @@mysite@@ vhost:%0a%0a(:nolinkwikiwords:)%0a         %3cVirtualHost *:80>%0a         ServerName mysite%0a         DocumentRoot "/path/to/mysite/files"%0a         %3c/VirtualHost>%0a(:linkwikiwords:)%0a%0a%0a!!! Make changes to @@/etc/hosts@@%0aIn order for you to browse to the vhost to let your machine know where to find the vhost. Add the following line to @@/etc/hosts@@:%0a%0a         127.0.0.1    mysite%0a%0a%25notebox%25 Note that the separator between the IP address and the hostname is a tab character.%0a%0a!!! Restart the server and you should be good to go!%0a%0a        apachectl restart%0a%0aYou can now access the virtual host via the URL: [@http://mysite/@].%0a%0a%0a(:Summary:How to handle the case when you've got a different path to your site on development and production:)%0a(:Parent:(Technology.)Environments:)%0a(:IncludeMe:[[(Technology.)Environments]]:)%0a(:Categories:[[!Articles]], [[!BestPractices]], [[!HowTos]]:)%0a(:Tags: howto, apache, web development:)%0a(:tags-hide howto, apache, web development :)%0a
time=1352135851
author:1352135851=tamara
csum:1352135851=add category
diff:1352135851:1334714369:minor=75c75%0a%3c (:Categories:[[!Articles]], [[!BestPractices]], [[!HowTos]]:)%0a---%0a> (:Categories:[[!Articles]]:)%0a
host:1352135851=75.144.38.217
author:1334714369=ImportText
diff:1334714369:1307050388:=1c1,5%0a%3c [[#excerpt]]%0a---%0a> (:Summary:A `HowTo on how to handle the case when you've got a different path to your site on development and production:)%0a> %25trail%25 %3c%3c|ComputerStuff|>>\\%0a> %3c%3c|SoftwareAndWebDevelopment|>>%0a> %0a> %0a3,5c7%0a%3c [[#excerptend]]%0a%3c %0a%3c %0a---%0a> %0a69,77c71,76%0a%3c You can now access the virtual host via the URL: [@http://mysite/@].%0a%3c %0a%3c %0a%3c (:Summary:How to handle the case when you've got a different path to your site on development and production:)%0a%3c (:Parent:(Technology.)Environments:)%0a%3c (:IncludeMe:[[(Technology.)Environments]]:)%0a%3c (:Categories:[[!Articles]]:)%0a%3c (:Tags: howto, apache, web development:)%0a%3c (:tags-hide howto, apache, web development :)%0a---%0a> %25center%25 [++You can now access the virtual host via the URL: [@http://mysite/@]++]%0a> %0a> [[%3c%3c]]%0a> %0a> %25trail%25 '''Categories:''' [[!ComputerStuff]], [[!HowTo]]%0a> '''Tags:''' (:tags howto, best practices, apache, web development:)%0a
host:1334714369=127.0.0.1
author:1307050388=tamara
csum:1307050388=new page
diff:1307050388:1307048899:=2,5c2%0a%3c %25trail%25 %3c%3c|ComputerStuff|>>\\%0a%3c %3c%3c|SoftwareAndWebDevelopment|>>%0a%3c %0a%3c %0a---%0a> %0a54c51%0a%3c          ServerName mysite%0a---%0a>          ServerName mysitel%0a63,66c60,63%0a%3c          127.0.0.1    mysite%0a%3c %0a%3c %25notebox%25 Note that the separator between the IP address and the hostname is a tab character.%0a%3c %0a---%0a>  127.0.0.1    mysite%0a> %0a> %25note%25 Note that the separator between the IP address and the hostname is a tab character.%0a> %0a71,75c68,71%0a%3c %25center%25 [++You can now access the virtual host via the URL: [@http://mysite/@]++]%0a%3c %0a%3c [[%3c%3c]]%0a%3c %0a%3c %25trail%25 '''Categories:''' [[!ComputerStuff]], [[!HowTo]]%0a---%0a> [++You can now access the virtual host via the URL: [@http://mysite/@]++]%0a> %0a> %0a> %25rframe%25 '''Categories:''' [[!ComputerStuff]], [[!HowTo]]%0a
host:1307050388=71.63.211.0
author:1307048899=tamara
diff:1307048899:1307042988:=13,68c13,20%0a%3c %25notebox%25 If you are going to set up your apache server for virtual hosting, one thing to keep in mind is that you must use a virtual host for the default host; the information in the @@httpd.conf@@ file for `ServerName and `DocumentRoot is ignored.%0a%3c %0a%3c !!! Set up vhosts subdirectory%0a%3c If there isn't already, create a subdirectory to hold the various virtual host configuration files. This makes it easier to manage multiple virtual hosts without cluttering up the main @@httpd.conf@@ file:%0a%3c %0a%3c %0a%3c           mkdir /etc/apache2/vhosts%0a%3c %0a%3c is one example of how to do this.%0a%3c %0a%3c !!!Modify the @@httpd.conf@@ file %0a%3c You will need to modify the @@httpd.conf@@ file to use virtual hosts by adding the following lines:%0a%3c %0a%3c (:nolinkwikiwords:) %0a%3c          ## Virtual hosts%0a%3c          NameVirtualHost *:80%0a%3c %0a%3c          %3cVirtualHost *:80>%0a%3c          ServerName localhost%0a%3c          DocumentRoot "/Library/WebServer/Documents"%0a%3c          %3c/VirtualHost>%0a%3c %0a%3c          Include /etc/apache2/vhosts/*.conf%0a%3c (:linkwikiwords:)%0a%3c %0a%3c The last line will include all file from the vhosts directory that end in @@.conf@@.%0a%3c %0a%3c %25notebox%25 on OS X, the path to @@/etc@@ is really @@/private/etc@@.%0a%3c %0a%3c !!! Create the configuration file for your new vhost:%0a%3c %0a%3c          cd /etc/apache2/vhosts%0a%3c          touch mysite.conf%0a%3c %0a%3c !!! Configure the @@mysite@@ vhost:%0a%3c %0a%3c (:nolinkwikiwords:)%0a%3c          %3cVirtualHost *:80>%0a%3c          ServerName mysitel%0a%3c          DocumentRoot "/path/to/mysite/files"%0a%3c          %3c/VirtualHost>%0a%3c (:linkwikiwords:)%0a%3c %0a%3c %0a%3c !!! Make changes to @@/etc/hosts@@%0a%3c In order for you to browse to the vhost to let your machine know where to find the vhost. Add the following line to @@/etc/hosts@@:%0a%3c %0a%3c  127.0.0.1    mysite%0a%3c %0a%3c %25note%25 Note that the separator between the IP address and the hostname is a tab character.%0a%3c %0a%3c !!! Restart the server and you should be good to go!%0a%3c %0a%3c         apachectl restart%0a%3c %0a%3c [++You can now access the virtual host via the URL: [@http://mysite/@]++]%0a---%0a> %25note%25 If you are going to set up your apache server for virtual hosting, one thing to keep in mind is that you must use a virtual host for the default host; the information in the @@httpd.conf@@ file for `ServerName and `DocumentRoot is ignored.%0a> %0a> # If there isn't already, create a subdirectory to hold the various virtual host configuration files. This makes it easier to manage multiple virtual hosts without cluttering up the main @@httpd.conf@@ file:%0a> %0a>  sudo mkdir /etc/apache2/vhosts%0a> %0a> ->is one example of how to do this.%0a> %0a
host:1307048899=71.63.211.0
author:1307042988=tamara
diff:1307042988:1307042988:=1,24d0%0a%3c (:Summary:A `HowTo on how to handle the case when you've got a different path to your site on development and production:)%0a%3c %0a%3c I recently had a situation where I had some problems working with the navigation paths on my development system that was going into a different directory structure on my production machine. In this case, the development path was a few layers deep while the production path was at the `DocumentRoot.%0a%3c %0a%3c The way I resolved the issue was to apply a couple of things:%0a%3c # create a virtual host that pointed to the development path%0a%3c # update the @@/etc/hosts@@ file to include names for the virtual host%0a%3c %0a%3c !!Setting up your server for using virtual hosts%0a%3c %0a%3c Most apache installations come out of the box ready to support virtual hosts. They just need to be configured.%0a%3c %0a%3c %25note%25 If you are going to set up your apache server for virtual hosting, one thing to keep in mind is that you must use a virtual host for the default host; the information in the @@httpd.conf@@ file for `ServerName and `DocumentRoot is ignored.%0a%3c %0a%3c # If there isn't already, create a subdirectory to hold the various virtual host configuration files. This makes it easier to manage multiple virtual hosts without cluttering up the main @@httpd.conf@@ file:%0a%3c %0a%3c  sudo mkdir /etc/apache2/vhosts%0a%3c %0a%3c ->is one example of how to do this.%0a%3c %0a%3c %0a%3c %0a%3c %25rframe%25 '''Categories:''' [[!ComputerStuff]], [[!HowTo]]%0a%3c '''Tags:''' (:tags howto, best practices, apache, web development:)%0a
host:1307042988=71.63.211.0
