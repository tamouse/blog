version=pmwiki-2.2.36 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_8) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19
author=tamara
charset=ISO-8859-1
csum=fix parent
ctime=1321756252
host=71.63.211.0
name=Technology.GoogleWeatherApi
rev=6
targets=Technology.GoogleWeatherApi,Technology.Google,Technology.IncludeMe,Category.Articles,Category.HowTos
text=(:if false:)%0aSummary:The iGoogle Weather API%0aParent:(Technology.)Google%0aIncludeMe:[[Technology.Google]]%0aCategories:[[!Articles]],[[!HowTos]]%0aTags: google, weather, api, web services, perl%0a(:tags-hide google, weather, api, web services, perl:)%0a(:ifend:)%0a%0a[[#excerpt]]%0aThe iGoogle weather api is an undocument service profided by Google to%0aserve it's iGoogle home page weather widget. It is ''by far'' the%0aeasiest weather web service to use, as everything is broken out for%0ayou in XML.%0a[[#excerptend]]%0a%0aThe call couldn't be easier, really:%0a%0a[@%0a  http://www.google.com/ig/api?weather=City%2520Name%0a@]%0a%0aYou can specify a state abbreviation as well, for example, St. Paul, Minnesota:%0a%0a[@%0a  http://www.google.com/ig/api?weather=St.%2520Paul%252C%2520MN%0a@]%0a%0aYou can also specify a zip code:%0a%0a[@%0a  http://www.google.com/ig/api?weather=55112%0a@]%0a%0a%0a%0aHere's an example of the XML output (tidied up) that you get for the%0acity of "Minneapolis":%0a%0a(:source lang=xml -getcode:)%0a%3c?xml version="1.0"?>%0a%3cxml_api_reply version="1">%0a  %3cweather module_id="0" tab_id="0" mobile_row="0" mobile_zipped="1"%0a	   row="0" section="0" >%0a    %3cforecast_information>%0a      %3ccity data="Minneapolis, MN"/>%0a      %3cpostal_code data="Minneapolis"/>%0a      %3clatitude_e6 data=""/>%0a      %3clongitude_e6 data=""/>%0a      %3cforecast_date data="2011-11-19"/>%0a      %3ccurrent_date_time data="2011-11-20 01:53:00 +0000"/>%0a      %3cunit_system data="US"/>%0a    %3c/forecast_information>%0a    %3ccurrent_conditions>%0a      %3ccondition data="Light snow"/>%0a      %3ctemp_f data="27"/>%0a      %3ctemp_c data="-3"/>%0a      %3chumidity data="Humidity: 81%25"/>%0a      %3cicon data="/ig/images/weather/flurries.gif"/>%0a      %3cwind_condition data="Wind: NW at 10 mph"/>%0a    %3c/current_conditions>%0a    %3cforecast_conditions>%0a      %3cday_of_week data="Sat"/>%0a      %3clow data="16"/>%0a      %3chigh data="32"/>%0a      %3cicon data="/ig/images/weather/snow.gif"/>%0a      %3ccondition data="Snow"/>%0a    %3c/forecast_conditions>%0a    %3cforecast_conditions>%0a      %3cday_of_week data="Sun"/>%0a      %3clow data="25"/>%0a      %3chigh data="27"/>%0a      %3cicon data="/ig/images/weather/mostly_sunny.gif"/>%0a      %3ccondition data="Mostly Sunny"/>%0a    %3c/forecast_conditions>%0a    %3cforecast_conditions>%0a      %3cday_of_week data="Mon"/>%0a      %3clow data="20"/>%0a      %3chigh data="36"/>%0a      %3cicon data="/ig/images/weather/mostly_sunny.gif"/>%0a      %3ccondition data="Mostly Sunny"/>%0a    %3c/forecast_conditions>%0a    %3cforecast_conditions>%0a      %3cday_of_week data="Tue"/>%0a      %3clow data="25"/>%0a      %3chigh data="38"/>%0a      %3cicon data="/ig/images/weather/mostly_sunny.gif"/>%0a      %3ccondition data="Mostly Sunny"/>%0a  %3c/forecast_conditions>%3c/weather>%0a%3c/xml_api_reply>%0a(:sourceend:)%0a%0a%0aA real simple script to get the current conditions:%0a%0a(:source lang=perl tabwidth=2 linenum:)%0ause strict;%0ause XML::Simple;%0ause URI::Escape;%0a%0ause constant DEFAULT_CITY => 'Minneapolis';%0a%0ause Getopt::Mixed::Help(%0a    'c>city:s city' => "City to look up weather for"%0a    );%0a%0amy $city = $opt_city;%0amy $url = "http://www.google.com/ig/api?weather=" . uri_escape($city);%0amy $curlcmd = "curl -s $url";%0amy $weather_xml = `$curlcmd`;%0amy $w = XMLin($weather_xml);%0a%0aprintf("Current conditions for %25s on %25s:%0aTemp: %25s F (%25s C)%0aWind: %25s%0aHumidity: %25s%0aSky: %25s%0a",%0a       $w->{weather}->{forecast_information}->{city}->{data},%0a       $w->{weather}->{forecast_information}->{forecast_date}->{data},%0a       $w->{weather}->{current_conditions}->{temp_f}->{data},%0a       $w->{weather}->{current_conditions}->{temp_c}->{data},%0a       $w->{weather}->{current_conditions}->{wind_condition}->{data},%0a       $w->{weather}->{current_conditions}->{humidity}->{data},%0a       $w->{weather}->{current_conditions}->{condition}->{data}%0a    );%0a%0a(:sourceend:)%0a%0aPrints on stdout:%0a%0a[@%0aCurrent conditions for Minneapolis, MN on 2011-11-19:%0aTemp: 27 F (-3 C)%0aWind: Wind: NW at 10 mph%0aHumidity: Humidity: 81%25%0aSky: Light snow%0a@]%0a       %0a
time=1334599108
author:1334599108=tamara
csum:1334599108=fix parent
diff:1334599108:1321760295:=3,5c3,6%0a%3c Parent:(Technology.)Google%0a%3c IncludeMe:[[Technology.Google]]%0a%3c Categories:[[!Articles]],[[!HowTos]]%0a---%0a> Crumbs:[[Main/]] >> [[ComputerStuff]]%0a> Parent:Google%0a> IncludeMe:[[Main.Google]]%0a> Categories:[[!ComputerStuff]]%0a10d10%0a%3c [[#excerpt]]%0a15d14%0a%3c [[#excerptend]]%0a
host:1334599108=71.63.211.0
author:1321760295=tamara
csum:1321760295=add ComputerStuff to bread crumbs
diff:1321760295:1321760215:minor=3c3%0a%3c Crumbs:[[Main/]] >> [[ComputerStuff]]%0a---%0a> Crumbs:[[Main/]]%0a
host:1321760295=71.63.211.0
author:1321760215=tamara
csum:1321760215=add state and zip code examples
diff:1321760215:1321759081:=21,34d20%0a%3c %0a%3c You can specify a state abbreviation as well, for example, St. Paul, Minnesota:%0a%3c %0a%3c [@%0a%3c   http://www.google.com/ig/api?weather=St.%2520Paul%252C%2520MN%0a%3c @]%0a%3c %0a%3c You can also specify a zip code:%0a%3c %0a%3c [@%0a%3c   http://www.google.com/ig/api?weather=55112%0a%3c @]%0a%3c %0a%3c %0a
host:1321760215=71.63.211.0
author:1321759081=tamara
diff:1321759081:1321759006:=18d17%0a%3c [@%0a20c19%0a%3c @]%0a---%0a> %0a
host:1321759081=71.63.211.0
author:1321759006=tamara
diff:1321759006:1321756252:=7,8c7,8%0a%3c Tags: google, weather, api, web services, perl%0a%3c (:tags-hide google, weather, api, web services, perl:)%0a---%0a> Tags: google, weather, api%0a> (:tags-hide google, weather, api:)%0a78,80c78,92%0a%3c A real simple script to get the current conditions:%0a%3c %0a%3c (:source lang=perl tabwidth=2 linenum:)%0a---%0a> A real simple script to get the weather where you are, or for another%0a> city:%0a> %0a> (:source lang=perl tabwidth=4 linenum:)%0a> #!/usr/bin/perl -w%0a> #%0a> # currentconditions%0a> #%0a> # Author: Tamara Temple %3ctamara@tamaratemple.com>%0a> # Created: 2011/11/19%0a> # Time-stamp: %3c2011-11-19 19:54:57 tamara>%0a> # Copyright (c) 2011 Tamara Temple Web Development%0a> # License: GPLv3%0a> #%0a> %0a82a95,96%0a> use Data::Dumper;%0a> use Geo::IP 1.006;%0a85,86c99,102%0a%3c use constant DEFAULT_CITY => 'Minneapolis';%0a%3c %0a---%0a> use constant DEFAULT_GEOIP_DATA => "/usr/share/GeoIP/GeoLiteCity.dat";%0a> use constant DEFAULT_DOMAIN_NAME => "tamnet.homeip.net";%0a> use constant DEFAULT_CITY => '';%0a> %0a87a104,105%0a>     'd>domain-name:s domain' => "Domain name to use for weather information",%0a>     'g>geoip-data:s file' => "GeoIP City database file",%0a90a109,110%0a> my $geoip_database = $opt_geoip_data;%0a> my $domain_name = $opt_domain_name;%0a92,95c112,138%0a%3c my $url = "http://www.google.com/ig/api?weather=" . uri_escape($city);%0a%3c my $curlcmd = "curl -s $url";%0a%3c my $weather_xml = `$curlcmd`;%0a%3c my $w = XMLin($weather_xml);%0a---%0a> %0a> sub whatsmyip {%0a>     my $domain = shift @_;%0a>     my $cmd = 'dig +short @208.67.222.222 ' . $domain;%0a>     my $ip = `$cmd`; chomp($ip);%0a>     return $ip;%0a> }%0a> %0a> %0a> sub getweather {%0a>     my $city = shift @_;%0a>     my $url = "http://www.google.com/ig/api?weather=" . uri_escape($city);%0a>     my $curlcmd = "curl -s $url";%0a>     my $weather = `$curlcmd`;%0a>     my $w = XMLin($weather);%0a>     return $w;%0a> }%0a> %0a> if ($city =~ /^\s*$/) {%0a>     my $geoip = Geo::IP->open($geoip_database);%0a>     my $geoip_rec = $geoip->record_by_addr(whatsmyip($domain_name));%0a>     die("error from geoip record retrieval: geoip_database=$geoip_database domain_name=$domain_name") if !defined($geoip_rec);%0a>     $city = $geoip_rec->city;%0a> }%0a> %0a> my $w = getweather($city);%0a> %0a
host:1321759006=71.63.211.0
author:1321756252=tamara
csum:1321756252=new page
diff:1321756252:1321756252:=1,166d0%0a%3c (:if false:)%0a%3c Summary:The iGoogle Weather API%0a%3c Crumbs:[[Main/]]%0a%3c Parent:Google%0a%3c IncludeMe:[[Main.Google]]%0a%3c Categories:[[!ComputerStuff]]%0a%3c Tags: google, weather, api%0a%3c (:tags-hide google, weather, api:)%0a%3c (:ifend:)%0a%3c %0a%3c The iGoogle weather api is an undocument service profided by Google to%0a%3c serve it's iGoogle home page weather widget. It is ''by far'' the%0a%3c easiest weather web service to use, as everything is broken out for%0a%3c you in XML.%0a%3c %0a%3c The call couldn't be easier, really:%0a%3c %0a%3c   http://www.google.com/ig/api?weather=City%2520Name%0a%3c %0a%3c %0a%3c Here's an example of the XML output (tidied up) that you get for the%0a%3c city of "Minneapolis":%0a%3c %0a%3c (:source lang=xml -getcode:)%0a%3c %3c?xml version="1.0"?>%0a%3c %3cxml_api_reply version="1">%0a%3c   %3cweather module_id="0" tab_id="0" mobile_row="0" mobile_zipped="1"%0a%3c 	   row="0" section="0" >%0a%3c     %3cforecast_information>%0a%3c       %3ccity data="Minneapolis, MN"/>%0a%3c       %3cpostal_code data="Minneapolis"/>%0a%3c       %3clatitude_e6 data=""/>%0a%3c       %3clongitude_e6 data=""/>%0a%3c       %3cforecast_date data="2011-11-19"/>%0a%3c       %3ccurrent_date_time data="2011-11-20 01:53:00 +0000"/>%0a%3c       %3cunit_system data="US"/>%0a%3c     %3c/forecast_information>%0a%3c     %3ccurrent_conditions>%0a%3c       %3ccondition data="Light snow"/>%0a%3c       %3ctemp_f data="27"/>%0a%3c       %3ctemp_c data="-3"/>%0a%3c       %3chumidity data="Humidity: 81%25"/>%0a%3c       %3cicon data="/ig/images/weather/flurries.gif"/>%0a%3c       %3cwind_condition data="Wind: NW at 10 mph"/>%0a%3c     %3c/current_conditions>%0a%3c     %3cforecast_conditions>%0a%3c       %3cday_of_week data="Sat"/>%0a%3c       %3clow data="16"/>%0a%3c       %3chigh data="32"/>%0a%3c       %3cicon data="/ig/images/weather/snow.gif"/>%0a%3c       %3ccondition data="Snow"/>%0a%3c     %3c/forecast_conditions>%0a%3c     %3cforecast_conditions>%0a%3c       %3cday_of_week data="Sun"/>%0a%3c       %3clow data="25"/>%0a%3c       %3chigh data="27"/>%0a%3c       %3cicon data="/ig/images/weather/mostly_sunny.gif"/>%0a%3c       %3ccondition data="Mostly Sunny"/>%0a%3c     %3c/forecast_conditions>%0a%3c     %3cforecast_conditions>%0a%3c       %3cday_of_week data="Mon"/>%0a%3c       %3clow data="20"/>%0a%3c       %3chigh data="36"/>%0a%3c       %3cicon data="/ig/images/weather/mostly_sunny.gif"/>%0a%3c       %3ccondition data="Mostly Sunny"/>%0a%3c     %3c/forecast_conditions>%0a%3c     %3cforecast_conditions>%0a%3c       %3cday_of_week data="Tue"/>%0a%3c       %3clow data="25"/>%0a%3c       %3chigh data="38"/>%0a%3c       %3cicon data="/ig/images/weather/mostly_sunny.gif"/>%0a%3c       %3ccondition data="Mostly Sunny"/>%0a%3c   %3c/forecast_conditions>%3c/weather>%0a%3c %3c/xml_api_reply>%0a%3c (:sourceend:)%0a%3c %0a%3c %0a%3c A real simple script to get the weather where you are, or for another%0a%3c city:%0a%3c %0a%3c (:source lang=perl tabwidth=4 linenum:)%0a%3c #!/usr/bin/perl -w%0a%3c #%0a%3c # currentconditions%0a%3c #%0a%3c # Author: Tamara Temple %3ctamara@tamaratemple.com>%0a%3c # Created: 2011/11/19%0a%3c # Time-stamp: %3c2011-11-19 19:54:57 tamara>%0a%3c # Copyright (c) 2011 Tamara Temple Web Development%0a%3c # License: GPLv3%0a%3c #%0a%3c %0a%3c use strict;%0a%3c use XML::Simple;%0a%3c use Data::Dumper;%0a%3c use Geo::IP 1.006;%0a%3c use URI::Escape;%0a%3c %0a%3c use constant DEFAULT_GEOIP_DATA => "/usr/share/GeoIP/GeoLiteCity.dat";%0a%3c use constant DEFAULT_DOMAIN_NAME => "tamnet.homeip.net";%0a%3c use constant DEFAULT_CITY => '';%0a%3c %0a%3c use Getopt::Mixed::Help(%0a%3c     'd>domain-name:s domain' => "Domain name to use for weather information",%0a%3c     'g>geoip-data:s file' => "GeoIP City database file",%0a%3c     'c>city:s city' => "City to look up weather for"%0a%3c     );%0a%3c %0a%3c my $geoip_database = $opt_geoip_data;%0a%3c my $domain_name = $opt_domain_name;%0a%3c my $city = $opt_city;%0a%3c %0a%3c sub whatsmyip {%0a%3c     my $domain = shift @_;%0a%3c     my $cmd = 'dig +short @208.67.222.222 ' . $domain;%0a%3c     my $ip = `$cmd`; chomp($ip);%0a%3c     return $ip;%0a%3c }%0a%3c %0a%3c %0a%3c sub getweather {%0a%3c     my $city = shift @_;%0a%3c     my $url = "http://www.google.com/ig/api?weather=" . uri_escape($city);%0a%3c     my $curlcmd = "curl -s $url";%0a%3c     my $weather = `$curlcmd`;%0a%3c     my $w = XMLin($weather);%0a%3c     return $w;%0a%3c }%0a%3c %0a%3c if ($city =~ /^\s*$/) {%0a%3c     my $geoip = Geo::IP->open($geoip_database);%0a%3c     my $geoip_rec = $geoip->record_by_addr(whatsmyip($domain_name));%0a%3c     die("error from geoip record retrieval: geoip_database=$geoip_database domain_name=$domain_name") if !defined($geoip_rec);%0a%3c     $city = $geoip_rec->city;%0a%3c }%0a%3c %0a%3c my $w = getweather($city);%0a%3c %0a%3c %0a%3c printf("Current conditions for %25s on %25s:%0a%3c Temp: %25s F (%25s C)%0a%3c Wind: %25s%0a%3c Humidity: %25s%0a%3c Sky: %25s%0a%3c ",%0a%3c        $w->{weather}->{forecast_information}->{city}->{data},%0a%3c        $w->{weather}->{forecast_information}->{forecast_date}->{data},%0a%3c        $w->{weather}->{current_conditions}->{temp_f}->{data},%0a%3c        $w->{weather}->{current_conditions}->{temp_c}->{data},%0a%3c        $w->{weather}->{current_conditions}->{wind_condition}->{data},%0a%3c        $w->{weather}->{current_conditions}->{humidity}->{data},%0a%3c        $w->{weather}->{current_conditions}->{condition}->{data}%0a%3c     );%0a%3c %0a%3c (:sourceend:)%0a%3c %0a%3c Prints on stdout:%0a%3c %0a%3c [@%0a%3c Current conditions for Minneapolis, MN on 2011-11-19:%0a%3c Temp: 27 F (-3 C)%0a%3c Wind: Wind: NW at 10 mph%0a%3c Humidity: Humidity: 81%25%0a%3c Sky: Light snow%0a%3c @]%0a%3c        %0a
host:1321756252=71.63.211.0
