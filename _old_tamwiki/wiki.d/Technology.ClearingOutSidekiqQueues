version=pmwiki-2.2.62 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36
author=tamouse
charset=ISO-8859-1
csum=new page
ctime=1406578809
host=173.8.101.94
name=Technology.ClearingOutSidekiqQueues
rev=1
targets=Technology.ClearingOutSidekiqQueues,Technology.Sidekiq,Technology.IncludeMe,Category.Technology,Category.Tools,Category.HowTos
text=>>comment%3c%3c%0aSummary: A poorly documented problem, with a simple (?) solution%0aParent: (Technology.)Sidekiq%0aIncludeMe: [[(Technology.)Sidekiq]]%0aCategories: [[!Technology]], [[!Tools]], [[!HowTos]]%0aTags: sidekiq, redis, rails, ruby, queues, howto%0a(:tags-hide sidekiq, redis, rails, ruby, queues, howto:)%0aSource: source url%0aPosted: Mon Jul 28 15:11:41 2014%0a>>%3c%3c%0a%0aSometimes, especially during development and test, your Sidekiq queues can grow to enormous lengths, likely when you have a lot of delayed emails if you're just running the rails stack and not running to sidekiq process at the same time. Job failures also contribute to this, as well as volume handling if you're using a real mail service, such as Gmail to handle the mails.%0a%0aThere are a couple of things to do:%0a%0a# Clear the Sidekiq queue.%0a# Don't use a real service for email.%0a%0aThis is about handling the first thing. For the second thing, look at [[MailCatcher -> http://mailcatcher.me/]].%0a%0a!! Clearing out the sidekiq queue.%0a%0aThe simplest thing is set up a rake task to do this:%0a%0a(:source lang=ruby linenum tabwidth=2 header="Rake Task to clear Sidekiq Queues" :)%0aclass SidekiqUtil%0a%0a  def self.queues%0a    ::Sidekiq::Stats.new.queues.keys.map { |name| ::Sidekiq::Queue.new(name) }%0a  end%0a%0a  def self.clear_all%0a    self.queues.each { |q| q.clear }%0a  end%0a%0aend%0a%0anamespace :jobs do%0a  desc "Clear out the sidekiq job queue"%0a  task :clear_sidekiq_queue, [:frequency] => :environment do |t, args|%0a    SidekiqUtil.clear_all%0a  end%0aend%0a(:sourceend:)%0a%0a
time=1406578809
author:1406578809=tamouse
csum:1406578809=new page
diff:1406578809:1406578809:=1,45d0%0a%3c >>comment%3c%3c%0a%3c Summary: A poorly documented problem, with a simple (?) solution%0a%3c Parent: (Technology.)Sidekiq%0a%3c IncludeMe: [[(Technology.)Sidekiq]]%0a%3c Categories: [[!Technology]], [[!Tools]], [[!HowTos]]%0a%3c Tags: sidekiq, redis, rails, ruby, queues, howto%0a%3c (:tags-hide sidekiq, redis, rails, ruby, queues, howto:)%0a%3c Source: source url%0a%3c Posted: Mon Jul 28 15:11:41 2014%0a%3c >>%3c%3c%0a%3c %0a%3c Sometimes, especially during development and test, your Sidekiq queues can grow to enormous lengths, likely when you have a lot of delayed emails if you're just running the rails stack and not running to sidekiq process at the same time. Job failures also contribute to this, as well as volume handling if you're using a real mail service, such as Gmail to handle the mails.%0a%3c %0a%3c There are a couple of things to do:%0a%3c %0a%3c # Clear the Sidekiq queue.%0a%3c # Don't use a real service for email.%0a%3c %0a%3c This is about handling the first thing. For the second thing, look at [[MailCatcher -> http://mailcatcher.me/]].%0a%3c %0a%3c !! Clearing out the sidekiq queue.%0a%3c %0a%3c The simplest thing is set up a rake task to do this:%0a%3c %0a%3c (:source lang=ruby linenum tabwidth=2 header="Rake Task to clear Sidekiq Queues" :)%0a%3c class SidekiqUtil%0a%3c %0a%3c   def self.queues%0a%3c     ::Sidekiq::Stats.new.queues.keys.map { |name| ::Sidekiq::Queue.new(name) }%0a%3c   end%0a%3c %0a%3c   def self.clear_all%0a%3c     self.queues.each { |q| q.clear }%0a%3c   end%0a%3c %0a%3c end%0a%3c %0a%3c namespace :jobs do%0a%3c   desc "Clear out the sidekiq job queue"%0a%3c   task :clear_sidekiq_queue, [:frequency] => :environment do |t, args|%0a%3c     SidekiqUtil.clear_all%0a%3c   end%0a%3c end%0a%3c (:sourceend:)%0a%3c %0a
host:1406578809=173.8.101.94
