version=pmwiki-2.2.36 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:11.0) Gecko/20100101 Firefox/11.0
author=tamara
charset=ISO-8859-1
csum=new page
ctime=1333601545
host=71.63.211.0
name=Technology.PerlFetchUrl
rev=1
targets=Technology.PerlFetchUrl,Technology.UserAgent,Technology.Perl,Technology.IncludeMe,Category.HowTos
text=[[#excerpt]]%0aFetching a page from the web is something which is done very often in my scripts. The following small function makes use of LWP::`UserAgent to retrieve and return the HTTP::Response object from the call.%0a[[#excerptend]]%0a%0a(:source lang=perl linenum header="fetchURL function" highlight='4':)%0asub fetchUrl {%0a    my $url = shift;%0a    my $ua = LWP::UserAgent->new(%0a	agent => "Mozilla/5.0",%0a	timeout => 30,%0a	);%0a    my $response = $ua->get($url);%0a    unless ($response->is_success) {%0a	warn "fetchUrl: $url" . ' returned ' . $response->status_line;%0a	return undef;%0a    }%0a    return $response;%0a}%0a(:sourceend:)%0a%0aNote at line 4, setting the value of the agent option. This is due to the practice of many websites not processing an unrecognized user agent string, or one which is quite obviously a script. This encapsulates the functionality inherent in LWP::UserAgent.%0a%0aThis should properly be done as an extended class of LWP::UserAgent, but it is so straight-forward as procedural code.%0a%0a>>comment%3c%3c%0aSummary:A compact function to return an HTML page encapsulated in an HTTP::Response object%0aParent:(Technology.)Perl%0aIncludeMe:[[Technology.Perl]]%0aCategories:[[!HowTos]]%0aTags: perl, howtos, examples, web development%0a(:tags-hide perl, howtos, examples, web development :)%0a>>%3c%3c%0a%0a%0a%0a
time=1333601545
author:1333601545=tamara
csum:1333601545=new page
diff:1333601545:1333601545:=1,35d0%0a%3c [[#excerpt]]%0a%3c Fetching a page from the web is something which is done very often in my scripts. The following small function makes use of LWP::`UserAgent to retrieve and return the HTTP::Response object from the call.%0a%3c [[#excerptend]]%0a%3c %0a%3c (:source lang=perl linenum header="fetchURL function" highlight='4':)%0a%3c sub fetchUrl {%0a%3c     my $url = shift;%0a%3c     my $ua = LWP::UserAgent->new(%0a%3c 	agent => "Mozilla/5.0",%0a%3c 	timeout => 30,%0a%3c 	);%0a%3c     my $response = $ua->get($url);%0a%3c     unless ($response->is_success) {%0a%3c 	warn "fetchUrl: $url" . ' returned ' . $response->status_line;%0a%3c 	return undef;%0a%3c     }%0a%3c     return $response;%0a%3c }%0a%3c (:sourceend:)%0a%3c %0a%3c Note at line 4, setting the value of the agent option. This is due to the practice of many websites not processing an unrecognized user agent string, or one which is quite obviously a script. This encapsulates the functionality inherent in LWP::UserAgent.%0a%3c %0a%3c This should properly be done as an extended class of LWP::UserAgent, but it is so straight-forward as procedural code.%0a%3c %0a%3c >>comment%3c%3c%0a%3c Summary:A compact function to return an HTML page encapsulated in an HTTP::Response object%0a%3c Parent:(Technology.)Perl%0a%3c IncludeMe:[[Technology.Perl]]%0a%3c Categories:[[!HowTos]]%0a%3c Tags: perl, howtos, examples, web development%0a%3c (:tags-hide perl, howtos, examples, web development :)%0a%3c >>%3c%3c%0a%3c %0a%3c %0a%3c %0a
host:1333601545=71.63.211.0
