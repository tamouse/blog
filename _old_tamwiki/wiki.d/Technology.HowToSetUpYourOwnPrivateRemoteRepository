version=pmwiki-2.2.36 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_8) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19
author=ImportText
charset=ISO-8859-1
csum=fix a few typos and clean up page variables
ctime=1316066365
host=127.0.0.1
name=Technology.HowToSetUpYourOwnPrivateRemoteRepository
rev=4
targets=
text=(:Summary:How to set up your own private git repository on a remote server:)%0a(:Parent:(Technology.)Git:)%0a(:IncludeMe:[[Technology.Git]]:)%0a(:Categories:[[!HowTos]]:)%0a(:tags-hide tools, git, repositories, source control:)%0a(:Tags:tools, git, repositories, source control:)%0a%0a[-''This is a slightly modified and localized copy of  [[http://tumblr.intranation.com/post/766290565/how-set-up-your-own-private-git-server-linux| this article]]''-]%0a%0a!!Set up the server%0a%0aThese instructions were performed on a `CentOs 5.5 box.%0a%0aFirst, if you haven’t done so already, add your public key to the server:%0a%0a $ ssh myuser@server.com mkdir .ssh%0a $ cat .ssh/id_rsa.pub | ssh myuser@server.com 'cat >> .ssh/authorized_keys'%0a%0a''(Don't do this if you've already uploaded your public ssh key!)''%0a%0a!!Add your repositories%0a%0aLogin to the server:%0a%0a $ ssh myuser@server.com%0a%0a%0aNow we can create our repositories:%0a%0a $ mkdir -p path/to/myrepo.git%0a $ cd $!%0a $ git init --bare .%0a%0aThe last steps creates an empty repository. This assumes there is a local repository to push to the remote server.%0a%0a%0aLog out of the server.%0a%0a!!Configure your development machine%0a%0aAdd the remotes to the local machine. If you’ve already defined a remote named origin (for example, if you followed [[http://github.com|GitHub’s]] instructions), you’ll want to delete the remote first:%0a%0a $ git remote rm origin%0a%0aNow we can add our new remote:%0a%0a $ git remote add origin myuser@server.com:path/to/myrepo.git%0a $ git push origin master%0a%0aAnd that’s it. You’ll probably also want to make sure you add a default merge and remote:%0a%0a $ git config branch.master.remote origin%0a $ git config branch.master.merge refs/heads/master%0a%0aAnd that's it!%0a%0a%0a%0a
time=1334714369
author:1334714369=ImportText
diff:1334714369:1328298545:=0a1%0a> (:keywords Tamara Temple, tamaratemple.com, wiki, computers, software, web development, tools, git, howto, remote repository:)%0a2,4c3,5%0a%3c (:Parent:(Technology.)Git:)%0a%3c (:IncludeMe:[[Technology.Git]]:)%0a%3c (:Categories:[[!HowTos]]:)%0a---%0a> (:Parent:Git:)%0a> (:IncludeMe:[[Main.Git]]:)%0a> (:Categories:[[!ComputerStuff]]:)%0a56d56%0a%3c %0a
host:1334714369=127.0.0.1
author:1328298545=tamara
csum:1328298545=fix a few typos and clean up page variables
diff:1328298545:1316066443:=3,8c3,7%0a%3c (:Parent:Git:)%0a%3c (:IncludeMe:[[Main.Git]]:)%0a%3c (:Categories:[[!ComputerStuff]]:)%0a%3c (:tags-hide tools, git, repositories, source control:)%0a%3c (:Tags:tools, git, repositories, source control:)%0a%3c %0a---%0a> %25trail%25 HomePage \\%0a> ComputerStuff \\%0a> SoftwareAndWebDevelopment \\%0a> %3c%3c|[[Git]]|>>%0a> %0a31,34c30,33%0a%3c  $ mkdir -p path/to/myrepo.git%0a%3c  $ cd $!%0a%3c  $ git init --bare .%0a%3c %0a---%0a>  $ mkdir myrepo.git%0a>  $ cd !$%0a>  $ git init --bare%0a> %0a58c57,59%0a%3c %0a---%0a> %25categories%25 '''Categories:''' [[!ComputerStuff]]%0a> %0a> %25tags%25 '''Tags:''' (:tags tools, git, repositories:)%0a
host:1328298545=71.63.211.0
author:1316066443=tamara
csum:1316066443=add keywords to page
diff:1316066443:1316066365:=1d0%0a%3c (:keywords Tamara Temple, tamaratemple.com, wiki, computers, software, web development, tools, git, howto, remote repository:)%0a
host:1316066443=71.63.211.0
author:1316066365=tamara
csum:1316066365=new page
diff:1316066365:1316066365:=1,58d0%0a%3c (:Summary:How to set up your own private git repository on a remote server:)%0a%3c %25trail%25 HomePage \\%0a%3c ComputerStuff \\%0a%3c SoftwareAndWebDevelopment \\%0a%3c %3c%3c|[[Git]]|>>%0a%3c %0a%3c [-''This is a slightly modified and localized copy of  [[http://tumblr.intranation.com/post/766290565/how-set-up-your-own-private-git-server-linux| this article]]''-]%0a%3c %0a%3c !!Set up the server%0a%3c %0a%3c These instructions were performed on a `CentOs 5.5 box.%0a%3c %0a%3c First, if you haven’t done so already, add your public key to the server:%0a%3c %0a%3c  $ ssh myuser@server.com mkdir .ssh%0a%3c  $ cat .ssh/id_rsa.pub | ssh myuser@server.com 'cat >> .ssh/authorized_keys'%0a%3c %0a%3c ''(Don't do this if you've already uploaded your public ssh key!)''%0a%3c %0a%3c !!Add your repositories%0a%3c %0a%3c Login to the server:%0a%3c %0a%3c  $ ssh myuser@server.com%0a%3c %0a%3c %0a%3c Now we can create our repositories:%0a%3c %0a%3c  $ mkdir myrepo.git%0a%3c  $ cd !$%0a%3c  $ git init --bare%0a%3c %0a%3c The last steps creates an empty repository. This assumes there is a local repository to push to the remote server.%0a%3c %0a%3c %0a%3c Log out of the server.%0a%3c %0a%3c !!Configure your development machine%0a%3c %0a%3c Add the remotes to the local machine. If you’ve already defined a remote named origin (for example, if you followed [[http://github.com|GitHub’s]] instructions), you’ll want to delete the remote first:%0a%3c %0a%3c  $ git remote rm origin%0a%3c %0a%3c Now we can add our new remote:%0a%3c %0a%3c  $ git remote add origin myuser@server.com:path/to/myrepo.git%0a%3c  $ git push origin master%0a%3c %0a%3c And that’s it. You’ll probably also want to make sure you add a default merge and remote:%0a%3c %0a%3c  $ git config branch.master.remote origin%0a%3c  $ git config branch.master.merge refs/heads/master%0a%3c %0a%3c And that's it!%0a%3c %0a%3c %25categories%25 '''Categories:''' [[!ComputerStuff]]%0a%3c %0a%3c %25tags%25 '''Tags:''' (:tags tools, git, repositories:)%0a
host:1316066365=71.63.211.0
