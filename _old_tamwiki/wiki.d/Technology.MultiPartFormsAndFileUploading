version=pmwiki-2.2.36 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_8) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19
author=ImportText
charset=ISO-8859-1
csum=  [[!ComputerStuff]]
ctime=1171838729
host=127.0.0.1
name=Technology.MultiPartFormsAndFileUploading
rev=4
targets=Technology.MultiPartFormsAndFileUploading
text=(:source lang=email:)%0aFrom:	owner-monkeyjunkies@wired.com on behalf of Tamara Temple%0aSent:	Thursday, November 26, 1998 3:11 AM %0aTo:	monkeyjunkies@wired.com%0aSubject:	RE: [mj] CGI.pm Multi-Part Forms, sendmail attachments%0a%0a > 'Gotta' agree with Alan `McCoy's %3cobjunky> regarding CGI.pm!%0a%0ame too me too!%0a%0a > I've got a form set up just fine, but i'd also like to allow the user%0a > to upload a file that would ideally be sent along as an attachment%0a > with the sendmail portion of the script i'm using on the page.%0a%0aumm -- isn't this explained in the CGI.pm Pod?  'Creating a File Upload%0aField' describes how to do this:%0a%0a%0a  print $q->start_multipart_form(),%0a		  $q->filefield(-name='uploadfile',-size='50'),%0a		  $q->endform;%0a%0a%0aand you process the file. If you're expecting binary (or you don't know what%0ato expect), then process the file using binary reads:%0a%0a%0a  $filename = $q->param('uploadfile');%0a  open OUT '>/tmp/safe/place/to/store/files.bin';%0a  while ($bytesrd=read($filename,$buffer,1024)) {%0a	  print OUT $buffer;%0a  }%0a  close OUT;%0a%0a%0aand now you can continue to futz with the file all you want.%0a(:sourceend:)%0a%0a(:Summary:How to handle file uploading in a perl-based web application:)%0a(:Parent:(Technology.)Perl:)%0a(:IncludeMe:[[(Technology.)Perl]]:)%0a(:Categories:[[!HowTos]]:)%0a(:Tags: perl, file uploads:)%0a(:tags-hide perl, file uploads :)%0a%0a
time=1334714369
author:1334714369=ImportText
diff:1334714369:1272827313:=1,6c1,10%0a%3c (:source lang=email:)%0a%3c From:	owner-monkeyjunkies@wired.com on behalf of Tamara Temple%0a%3c Sent:	Thursday, November 26, 1998 3:11 AM %0a%3c To:	monkeyjunkies@wired.com%0a%3c Subject:	RE: [mj] CGI.pm Multi-Part Forms, sendmail attachments%0a%3c %0a---%0a> %3c%3c|SoftwareAndWebProgramming|>>%0a> %0a> Webgramming: Multipart Forms / File uploads%0a> %0a> ------------%0a> From:	owner-monkeyjunkies@wired.com on behalf of Tamara Temple [] \\%0a> Sent:	Thursday, November 26, 1998 3:11 AM \\%0a> To:	monkeyjunkies@wired.com \\%0a> Subject:	RE: [mj] CGI.pm Multi-Part Forms, sendmail attachments \\%0a> %0a37,45c41,47%0a%3c (:sourceend:)%0a%3c %0a%3c (:Summary:How to handle file uploading in a perl-based web application:)%0a%3c (:Parent:(Technology.)Perl:)%0a%3c (:IncludeMe:[[(Technology.)Perl]]:)%0a%3c (:Categories:[[!HowTos]]:)%0a%3c (:Tags: perl, file uploads:)%0a%3c (:tags-hide perl, file uploads :)%0a%3c %0a---%0a> %0a> %0a> %0a> %3c%3c|SoftwareAndWebProgramming|>>%0a> %0a> %0a> [[!ComputerStuff]]%0a
host:1334714369=127.0.0.1
author:1272827313=tamouse
diff:1272827313:1171839238:=45,47d44%0a%3c %0a%3c %0a%3c [[!ComputerStuff]]%0a
host:1272827313=71.193.74.221
author:1171839238=Tamara Temple
csum:1171839238=creation
diff:1171839238:1171838729:=3,43c3,4%0a%3c Webgramming: Multipart Forms / File uploads%0a%3c %0a%3c ------------%0a%3c From:	owner-monkeyjunkies@wired.com on behalf of Tamara Temple [] \\%0a%3c Sent:	Thursday, November 26, 1998 3:11 AM \\%0a%3c To:	monkeyjunkies@wired.com \\%0a%3c Subject:	RE: [mj] CGI.pm Multi-Part Forms, sendmail attachments \\%0a%3c %0a%3c  > 'Gotta' agree with Alan `McCoy's %3cobjunky> regarding CGI.pm!%0a%3c %0a%3c me too me too!%0a%3c %0a%3c  > I've got a form set up just fine, but i'd also like to allow the user%0a%3c  > to upload a file that would ideally be sent along as an attachment%0a%3c  > with the sendmail portion of the script i'm using on the page.%0a%3c %0a%3c umm -- isn't this explained in the CGI.pm Pod?  'Creating a File Upload%0a%3c Field' describes how to do this:%0a%3c %0a%3c %0a%3c   print $q->start_multipart_form(),%0a%3c 		  $q->filefield(-name='uploadfile',-size='50'),%0a%3c 		  $q->endform;%0a%3c %0a%3c %0a%3c and you process the file. If you're expecting binary (or you don't know what%0a%3c to expect), then process the file using binary reads:%0a%3c %0a%3c %0a%3c   $filename = $q->param('uploadfile');%0a%3c   open OUT '>/tmp/safe/place/to/store/files.bin';%0a%3c   while ($bytesrd=read($filename,$buffer,1024)) {%0a%3c 	  print OUT $buffer;%0a%3c   }%0a%3c   close OUT;%0a%3c %0a%3c %0a%3c and now you can continue to futz with the file all you want.%0a%3c %0a%3c %0a%3c %0a---%0a> stub%0a> %0a
host:1171839238=24.6.176.50
author:1171838729=Tamara Temple
csum:1171838729=stub
diff:1171838729:1171838729:minor=1,5d0%0a%3c %3c%3c|SoftwareAndWebProgramming|>>%0a%3c %0a%3c stub%0a%3c %0a%3c %3c%3c|SoftwareAndWebProgramming|>>%0a
host:1171838729=24.6.176.50
