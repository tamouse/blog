version=pmwiki-2.2.56 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.102 Safari/537.36
author=tamara
charset=ISO-8859-1
csum=
ctime=1390244681
host=173.8.101.94
name=Technology.HowToSetUpPostgreSQLonLinux
rev=8
targets=Technology.HowToSetUpPostgreSQLonLinux,Technology.PostgreSQL,Technology.IncludeMe,Category.HowTos,Technology.LATIN1,Technology.UTF8
text=>>comment%3c%3c%0aSummary: A brief description of how to get `PostgreSQL set up on a Linux system for development.%0aParent: (Technology.)PostgreSQL%0aIncludeMe: [[(Technology.)PostgreSQL]]%0aCategories: [[!HowTos]]%0aTags: howto, linux, postgresql, postgres, setup%0a(:tags-hide howto, linux, postgresql, postgres, setup:)%0aSource: various%0aPosted: Mon Jan 20 12:49:00 2014%0a>>%3c%3c%0a%0a[[#excerpt]]%0aSetting up a `PostgreSQL service on a new, fresh Linux install is%0apretty easy, but it's a bit more complicated than expected. Since I%0adon't do this very often, I thought it best to put the info in a place%0aI won't have to hunt for it.%0a[[#excerptend]]%0a%0a!! Before Installing%0a%0aIf you're running Ubuntu 12.04 (precise) then you need to get the repositories for versions later than 9.1.%0a%0a>>quote%3c%3c%0aCreate the file /etc/apt/sources.list.d/pgdg.list, and add a line for the repository%0a%0a    deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main%0a%0aImport the repository signing key, and update the package lists%0a%0a    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \%0a      sudo apt-key add -%0a    sudo apt-get update%0a>>%3c%3c%0a%0a!! Installing postgresql%0a%0a    $ sudo apt-get install postgresql-9.3%0a%0a!! Configuring users/roles%0a%0aPostgreSQL users and roles are treated interchangeably in the%0adocumentation. By default, the only user/role is [@postgres@]. You can%0aleave it at this if you wish, or you can set things up a little easier%0ato use with vagrant.%0a%0a    $ sudo -u postgres createuser --superuser vagrant%0a%0a!! Using UTF-8 encoding%0a%0aAs shipped, postgresql uses LATIN1 encoding, so you have to fix it. [[http://stackoverflow.com/questions/13115692/encoding-utf8-does-not-match-locale-en-us-the-chosen-lc-ctype-setting-requires | This stackoverflow post]] discusses how to fix this.%0a%0a!!!Create a file:%0a%0a    nano /etc/profile.d/lang.sh%0a%0a!!!Add the following%0a%0a(:source lang=bash:)%0aexport LANGUAGE="en_US.UTF-8"%0aexport LANG="en_US.UTF-8"%0aexport LC_ALL="en_US.UTF-8"%0a(:sourcend:)%0a%0aSave it and restart your system.%0a%0a!!! Reconfigure so the encoding can be UTF8%0a%0a(:source lang=bash:)%0asudo su postgres%0apsql%0a(:sourceend:)%0a(:source lang=sql:)%0aupdate pg_database set datistemplate=false where datname='template1';%0adrop database Template1;%0acreate database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template template0;%0aupdate pg_database set datistemplate=true where datname='template1';%0a(:sourcend:)%0a%0aUse template1 for db creation.%0a%0a!! Addendum for Vagrant%0a%0aAssuming you're using a precise32 or precise64 box, the following provisioning script works:%0a%0a(:source lang=ruby:)%0a  config.vm.provision "shell" do |s|%0a    s.inline = %25Q{%0aecho 'export LANGUAGE="en_US.UTF-8"' >  /etc/profile.d/lang.sh%0aecho 'export LANG="en_US.UTF-8"'     >> /etc/profile.d/lang.sh%0aecho 'export LC_ALL="en_US.UTF-8"'   >> /etc/profile.d/lang.sh%0asource /etc/profile.d/lang.sh%0a%0aapt-get update%0aapt-get -y install build-essential%0aapt-get -y install curl%0aapt-get -y install git-core%0aapt-get -y install emacs23-nox%0aecho 'deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main' > /etc/apt/sources.list.d/pgdg.list%0awget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -%0aapt-get update%0aapt-get -y install postgresql-9.2%0a%0a%0aecho "update pg_database set datistemplate=false where datname='template1';" > /tmp/psql-encoding.sql%0aecho "drop database Template1;" >> /tmp/psql-encoding.sql%0aecho "create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template template0;" >> /tmp/psql-encoding.sql%0aecho "update pg_database set datistemplate=true where datname='template1';" >> /tmp/psql-encoding.sql%0asudo su postgres -c 'psql %3c /tmp/psql-encoding.sql'%0a%0aapt-get -y install imagemagick%0a}%0a  end%0a(:sourceend:)%0a
time=1391202776
author:1391202776=tamara
diff:1391202776:1391202705:=
host:1391202776=173.8.101.94
author:1391202705=tamara
diff:1391202705:1390265084:=80,113d79%0a%3c %0a%3c !! Addendum for Vagrant%0a%3c %0a%3c Assuming you're using a precise32 or precise64 box, the following provisioning script works:%0a%3c %0a%3c (:source lang=ruby:)%0a%3c   config.vm.provision "shell" do |s|%0a%3c     s.inline = %25Q{%0a%3c echo 'export LANGUAGE="en_US.UTF-8"' >  /etc/profile.d/lang.sh%0a%3c echo 'export LANG="en_US.UTF-8"'     >> /etc/profile.d/lang.sh%0a%3c echo 'export LC_ALL="en_US.UTF-8"'   >> /etc/profile.d/lang.sh%0a%3c source /etc/profile.d/lang.sh%0a%3c %0a%3c apt-get update%0a%3c apt-get -y install build-essential%0a%3c apt-get -y install curl%0a%3c apt-get -y install git-core%0a%3c apt-get -y install emacs23-nox%0a%3c echo 'deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main' > /etc/apt/sources.list.d/pgdg.list%0a%3c wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -%0a%3c apt-get update%0a%3c apt-get -y install postgresql-9.2%0a%3c %0a%3c %0a%3c echo "update pg_database set datistemplate=false where datname='template1';" > /tmp/psql-encoding.sql%0a%3c echo "drop database Template1;" >> /tmp/psql-encoding.sql%0a%3c echo "create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template template0;" >> /tmp/psql-encoding.sql%0a%3c echo "update pg_database set datistemplate=true where datname='template1';" >> /tmp/psql-encoding.sql%0a%3c sudo su postgres -c 'psql %3c /tmp/psql-encoding.sql'%0a%3c %0a%3c apt-get -y install imagemagick%0a%3c }%0a%3c   end%0a%3c (:sourceend:)%0a
host:1391202705=173.8.101.94
author:1390265084=tamara
diff:1390265084:1390263635:=75c75%0a%3c create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template template0;%0a---%0a> create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.utf8' lc_ctype='en_US.utf8' template template0;%0a
host:1390265084=174.53.192.61
author:1390263635=tamara
diff:1390263635:1390263583:=72c72%0a%3c (:source lang=sql:)%0a---%0a> (source lang=sql:)%0a
host:1390263635=174.53.192.61
author:1390263583=tamara
diff:1390263583:1390263517:=68,77c68,74%0a%3c (:source lang=bash:)%0a%3c sudo su postgres%0a%3c psql%0a%3c (:sourceend:)%0a%3c (source lang=sql:)%0a%3c update pg_database set datistemplate=false where datname='template1';%0a%3c drop database Template1;%0a%3c create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.utf8' lc_ctype='en_US.utf8' template template0;%0a%3c update pg_database set datistemplate=true where datname='template1';%0a%3c (:sourcend:)%0a---%0a>     sudo su postgres%0a>     psql%0a>     > update pg_database set datistemplate=false where datname='template1';%0a>     > drop database Template1;%0a>     > create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.utf8' lc_ctype='en_US.utf8' template template0;%0a>     > update pg_database set datistemplate=true where datname='template1';%0a> %0a
host:1390263583=174.53.192.61
author:1390263517=tamara
diff:1390263517:1390262675:=19,34d18%0a%3c !! Before Installing%0a%3c %0a%3c If you're running Ubuntu 12.04 (precise) then you need to get the repositories for versions later than 9.1.%0a%3c %0a%3c >>quote%3c%3c%0a%3c Create the file /etc/apt/sources.list.d/pgdg.list, and add a line for the repository%0a%3c %0a%3c     deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main%0a%3c %0a%3c Import the repository signing key, and update the package lists%0a%3c %0a%3c     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \%0a%3c       sudo apt-key add -%0a%3c     sudo apt-get update%0a%3c >>%3c%3c%0a%3c %0a37,38c21,46%0a%3c     $ sudo apt-get install postgresql-9.3%0a%3c %0a---%0a>     $ sudo apt-get install postgresql%0a> %0a> This will install the default for your distro. Note that if you need a%0a> later version (say for example 9.2 or 9.3, and you distro only has 9.1%0a> in the packages repo) you'll need to install by source.%0a> %0a> !! Configuring postgresql%0a> %0a> On ubuntu precise32, the postgres server is started immediately, so%0a> you'll want to shut it down.%0a> %0a>     $ sudo service postgresql stop%0a> %0a> Next, create the directory for the postgres data:%0a> %0a>     $ sudo mkdir -p /usr/local/pgsql/data%0a>     $ sudo chown -R postgres /usr/local/pgsql%0a> %0a> Next, initialize the database system:%0a> %0a>     $ sudo -u postgres /usr/share/postgresql/9.1/initdb -D /usr/local/pgsql/data%0a> %0a> Restart the server:%0a> %0a>     $ sudo service postgresql start%0a> %0a48,76d55%0a%3c !! Using UTF-8 encoding%0a%3c %0a%3c As shipped, postgresql uses LATIN1 encoding, so you have to fix it. [[http://stackoverflow.com/questions/13115692/encoding-utf8-does-not-match-locale-en-us-the-chosen-lc-ctype-setting-requires | This stackoverflow post]] discusses how to fix this.%0a%3c %0a%3c !!!Create a file:%0a%3c %0a%3c     nano /etc/profile.d/lang.sh%0a%3c %0a%3c !!!Add the following%0a%3c %0a%3c (:source lang=bash:)%0a%3c export LANGUAGE="en_US.UTF-8"%0a%3c export LANG="en_US.UTF-8"%0a%3c export LC_ALL="en_US.UTF-8"%0a%3c (:sourcend:)%0a%3c %0a%3c Save it and restart your system.%0a%3c %0a%3c !!! Reconfigure so the encoding can be UTF8%0a%3c %0a%3c     sudo su postgres%0a%3c     psql%0a%3c     > update pg_database set datistemplate=false where datname='template1';%0a%3c     > drop database Template1;%0a%3c     > create database template1 with owner=postgres encoding='UTF-8' lc_collate='en_US.utf8' lc_ctype='en_US.utf8' template template0;%0a%3c     > update pg_database set datistemplate=true where datname='template1';%0a%3c %0a%3c %0a%3c Use template1 for db creation.%0a
host:1390263517=174.53.192.61
author:1390262675=tamara
diff:1390262675:1390244681:=
host:1390262675=174.53.192.61
author:1390244681=tamara
diff:1390244681:1390244681:=1,55d0%0a%3c >>comment%3c%3c%0a%3c Summary: A brief description of how to get `PostgreSQL set up on a Linux system for development.%0a%3c Parent: (Technology.)PostgreSQL%0a%3c IncludeMe: [[(Technology.)PostgreSQL]]%0a%3c Categories: [[!HowTos]]%0a%3c Tags: howto, linux, postgresql, postgres, setup%0a%3c (:tags-hide howto, linux, postgresql, postgres, setup:)%0a%3c Source: various%0a%3c Posted: Mon Jan 20 12:49:00 2014%0a%3c >>%3c%3c%0a%3c %0a%3c [[#excerpt]]%0a%3c Setting up a `PostgreSQL service on a new, fresh Linux install is%0a%3c pretty easy, but it's a bit more complicated than expected. Since I%0a%3c don't do this very often, I thought it best to put the info in a place%0a%3c I won't have to hunt for it.%0a%3c [[#excerptend]]%0a%3c %0a%3c !! Installing postgresql%0a%3c %0a%3c     $ sudo apt-get install postgresql%0a%3c %0a%3c This will install the default for your distro. Note that if you need a%0a%3c later version (say for example 9.2 or 9.3, and you distro only has 9.1%0a%3c in the packages repo) you'll need to install by source.%0a%3c %0a%3c !! Configuring postgresql%0a%3c %0a%3c On ubuntu precise32, the postgres server is started immediately, so%0a%3c you'll want to shut it down.%0a%3c %0a%3c     $ sudo service postgresql stop%0a%3c %0a%3c Next, create the directory for the postgres data:%0a%3c %0a%3c     $ sudo mkdir -p /usr/local/pgsql/data%0a%3c     $ sudo chown -R postgres /usr/local/pgsql%0a%3c %0a%3c Next, initialize the database system:%0a%3c %0a%3c     $ sudo -u postgres /usr/share/postgresql/9.1/initdb -D /usr/local/pgsql/data%0a%3c %0a%3c Restart the server:%0a%3c %0a%3c     $ sudo service postgresql start%0a%3c %0a%3c !! Configuring users/roles%0a%3c %0a%3c PostgreSQL users and roles are treated interchangeably in the%0a%3c documentation. By default, the only user/role is [@postgres@]. You can%0a%3c leave it at this if you wish, or you can set things up a little easier%0a%3c to use with vagrant.%0a%3c %0a%3c     $ sudo -u postgres createuser --superuser vagrant%0a%3c %0a
host:1390244681=174.53.192.61
