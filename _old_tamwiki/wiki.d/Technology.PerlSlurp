version=pmwiki-2.2.43 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:17.0) Gecko/17.0 Firefox/17.0
author=tamara
charset=ISO-8859-1
csum=fix bug in slurping stdin - missing semi
ctime=1349489481
host=71.63.215.130
name=Technology.PerlSlurp
rev=2
targets=Technology.PerlSlurp,Technology.Perl,Technology.IncludeMe,Category.HowTos,Category.Articles
text=[[#excerpt]]%0a''Slurp'' means to read an entire file into a string variable all in one go.%0a[[#excerptend]]%0a%0aIn perl, a file can easily be read into an array by assigning the array to the filehandle:%0a%0a(:source lang=perl linenum:)%0aopen($fh,"%3c",$filename);%0a@lines = %3c$fh>;%0a(:sourceend:)%0a%0aIf one wants to have all of the source in one string, you could do the above and join the lines:%0a%0a(:source lang=perl linenum:)%0aopen($fh,"%3c",$filename);%0a@lines = %3c$fh>;%0a$lines = join('',@lines);%0a(:sourceend:)%0a%0aAlternatively, you can reset the input line separator, @@$/@@, to undef, and then read the file directly into a string:%0a%0a(:source lang=perl linenum:)%0amy $text = do { local( @ARGV, $/ ) = $filename ; %3c> } ;%0a(:sourceend:)%0a%0aIf you want to do this with standard input:%0a%0a(:source lang=perl linenum:)%0amy $text = do { local( $/ ); %3cSTDIN> } ;%0a(:sourceend:)%0a%0a%0a%0a>>comment%3c%3c%0aSummary:Your basic slurp in Perl%0aParent:(Technology.)Perl%0aIncludeMe:[[(Technology.)Perl]]%0aCategories:[[!HowTos]],[[!Articles]]%0aTags: perl, slurp, reading files, idioms%0a(:tags-hide perl, slurp, reading files, idioms :)%0a>>%3c%3c%0a
time=1354360709
author:1354360709=tamara
csum:1354360709=fix bug in slurping stdin - missing semi
diff:1354360709:1349489481:=29c29%0a%3c my $text = do { local( $/ ); %3cSTDIN> } ;%0a---%0a> my $text = do { local( $/ ) %3cSTDIN> } ;%0a
host:1354360709=71.63.215.130
author:1349489481=tamara
csum:1349489481=new page
diff:1349489481:1349489481:=1,41d0%0a%3c [[#excerpt]]%0a%3c ''Slurp'' means to read an entire file into a string variable all in one go.%0a%3c [[#excerptend]]%0a%3c %0a%3c In perl, a file can easily be read into an array by assigning the array to the filehandle:%0a%3c %0a%3c (:source lang=perl linenum:)%0a%3c open($fh,"%3c",$filename);%0a%3c @lines = %3c$fh>;%0a%3c (:sourceend:)%0a%3c %0a%3c If one wants to have all of the source in one string, you could do the above and join the lines:%0a%3c %0a%3c (:source lang=perl linenum:)%0a%3c open($fh,"%3c",$filename);%0a%3c @lines = %3c$fh>;%0a%3c $lines = join('',@lines);%0a%3c (:sourceend:)%0a%3c %0a%3c Alternatively, you can reset the input line separator, @@$/@@, to undef, and then read the file directly into a string:%0a%3c %0a%3c (:source lang=perl linenum:)%0a%3c my $text = do { local( @ARGV, $/ ) = $filename ; %3c> } ;%0a%3c (:sourceend:)%0a%3c %0a%3c If you want to do this with standard input:%0a%3c %0a%3c (:source lang=perl linenum:)%0a%3c my $text = do { local( $/ ) %3cSTDIN> } ;%0a%3c (:sourceend:)%0a%3c %0a%3c %0a%3c %0a%3c >>comment%3c%3c%0a%3c Summary:Your basic slurp in Perl%0a%3c Parent:(Technology.)Perl%0a%3c IncludeMe:[[(Technology.)Perl]]%0a%3c Categories:[[!HowTos]],[[!Articles]]%0a%3c Tags: perl, slurp, reading files, idioms%0a%3c (:tags-hide perl, slurp, reading files, idioms :)%0a%3c >>%3c%3c%0a
host:1349489481=71.63.215.130
