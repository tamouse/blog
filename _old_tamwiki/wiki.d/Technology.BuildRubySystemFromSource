version=pmwiki-2.2.56 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36
author=tamara
charset=ISO-8859-1
csum=Update for ruby 2.1.0.
ctime=1371964248
host=174.53.192.61
name=Technology.BuildRubySystemFromSource
rev=14
targets=Technology.BuildRubySystemFromSource,Technology.Ruby,Technology.Rvm,Technology.Rbenv,Technology.Ruby-build,Technology.Linux,Technology.HomeBrew,Technology.Windows,Technology.Apt,Technology.RubyOnRails,Technology.IncludeMe,Category.Articles,Category.HowTos
text=[[#excerpt]]%0aInstalling [[Ruby]] can be difficult sometimes. With the number of%0adifferent operating system distributions, number of versions, and%0apossible local configurations, it is hard to make a one-stop install%0athat fits every user's need.%0a%0aThe primary resource for installing [[Ruby]] remains the%0a[[http://www.ruby-lang.org/en/downloads/ | download page]] on the%0a[[http://www.ruby-lang.org | ruby-lang]] site itself.%0a%0aIf you can, you should first try to install [[Ruby]] using tools such%0aas [[rvm]], [[rbenv]], [[ruby-build]], and so on.%0a%0aThese represent the minimal set of steps to install [[Ruby]] on a%0a[[Linux]] system from the source. To install [[Ruby]] from on a Mac,%0ause [[HomeBrew]]. To install [[Ruby]] on [[Windows]], please see%0a[[RubyInstaller -> http://rubyinstaller.org/ ]].%0a[[#excerptend]]%0a%0a!! Install your favourite distribution%0a%0aThese instructions work for any [[Debian-based -> http://debian.org ]]%0alinux system, as well as some others.%0a%0aThe Debian system installer, [[apt]], is assumed here. Other linux%0adistributions have different installers, and potentially other package%0anames.%0a%0a!! Log in as root%0a%0a(:source lang=bash    :)%0a$ sudo -i%0aPassword: # enter your user's password%0a$%0a(:sourceend:)%0a%0a!! Install Packages Ruby Needs to Build from Source%0a%0a(:source lang=bash:)%0a$ apt-get install %3cpackage> # see list below%0a(:sourceend:)%0a%0a!!! Ruby needs these to build correctly.%0a%0a* build-essential%0a* git-core%0a* curl%0a* bison%0a* openssl%0a* libreadline6%0a* libreadline6-dev%0a* zlib1g%0a* zlib1g-dev%0a* libssl-dev%0a* libyaml-dev%0a* libxml2-dev%0a* libxslt-dev%0a* autoconf%0a* libc6-dev%0a* ncurses-dev%0a* libcurl4-openssl-dev%0a* libopenssl-ruby%0a* apache2-prefork-dev%0a* libapr1-dev%0a* libaprutil1-dev%0a* libx11-dev%0a* libffi-dev%0a* tcl-dev%0a* tk-dev %0a%0aThese will pull in other packages as needed.%0a%0a(:source lang=bash linenum tabwidth=2  :)%0a$ apt-get install build-essential git-core curl bison openssl \%0alibreadline6  libreadline6-dev zlib1g zlib1g-dev libssl-dev \%0alibyaml-dev libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev \%0alibcurl4-openssl-dev libopenssl-ruby apache2-prefork-dev libapr1-dev \%0alibaprutil1-dev libx11-dev libffi-dev tcl-dev tk-dev %0a(:sourceend:)%0a%0a%0a!! Acquire the Ruby Source%0a%0aDownload the latest version of Ruby here: http://www.ruby-lang.org/en/downloads/ under the Compiling Ruby — Source code section.%0a%0a(:source lang=bash linenums:)%0acd /usr/src%0awget http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.0.tar.gz%0atar zxvf ruby-2.1.0.tar.gz%0acd ruby-2.1.0%0a(:sourceend:)%0a%0a!! Do the needful%0a%0aThis is the point where you will actually configure, build, and%0ainstall ruby onto your system. Deciding where to put the new version%0ais something you have to consider.%0a%0aInstalling into @@/usr@@ directory will replace the existing system%0aruby. This isn't a bad idea in all cases, but some packages and%0autilities may rely on features in the old version of ruby. Still, I%0ahaven't encountered any problems in do this on a modern running%0adebian-based system.%0a%0aInstalling into @@/usr/local@@ is a popular option, but you need to%0aensure that you have your environment set up to know which ruby to%0arun. When logged in, it is rather simple to keep the @@/usr/local@@%0adirectory before the @@/usr@@ directory in your @@PATH@@ environment%0avariable, which is all that should really be necessary. However, in%0aother  environments, such as @@crontab@@ and other system settings,%0ayou might need to do a little more to ensure the @@PATH@@ is set%0acorrectly.%0a%0a(:source lang=bash:)%0a./configure --prefix=/usr # default setups%0amake # compiles the source%0amake install # installs the programs in /usr/bin, etc%0a(:sourceend:)%0a%0a!! Test the install%0a%0a(:source lang=bash:)%0acd%0awhich ruby; ruby --version%0awhich irb; irb --version%0awhich gem; gem --version%0awhich rake; rake --version%0a(:sourceend:)%0a%0a!! Install some gems%0a%0a(:source lang=bash:)%0agem install bundler%0agem install rails%0a(:sourceend:)%0a%0a[[http://bundler.io | @@bundler@@ ]] is probably the most important%0agem to install. It is used to manage gems for developing programs,%0alibraries, ruby packages, and applications. Install it, and be happy.%0a%0a[[RubyOnRails|Rails]] is the premier web application framework based on [[Ruby]]%0aand is the reason so many people learn Ruby. It's not the only one,%0aso you don't have to install it, but it's really a good test of a new%0ainstallation of ruby.%0a%0a!! Logout from root, login as user%0a%0aOf note, since you've compiled and installed ruby as the system ruby,%0ayou will need to continue installing gems as the superuser, unless you%0aset the environment variable @@GEM_PATH@@ in your user's @@.profile@@%0ato something you can write to. This is the best way to do development,%0awith your own local per-user set of gems. When you deploy your ruby%0aprojects, you'll be able to decide at that point where and how to%0ainstall necessary gems.%0a%0a!! Create a new gem%0a%0a(:source lang=bash linenum:)%0a$ mkdir -p ~/Projects/ruby_projects%0a$ cd ~/Projects/ruby_projects%0a$ bundle gem my_test_gem%0a(:sourceend:)%0a%0a%0a!! Create a test rails app%0a%0a(:source lang=bash linenum:)%0a$ mkdir -p ~/Websites/rails%0a$ cd ~/Websites/rails%0a$ rails new my_test_rails%0a(:sourceend:)%0a%0a>>comment%3c%3c%0aSummary: A step-by-step recording of building a Ruby dev system from source%0aParent:(Technology.)Ruby%0aIncludeMe:[[(Technology.)Ruby]]%0aCategories:[[!Articles]], [[!HowTos]]%0aTags: ruby, howtos%0a(:tags-hide ruby, howtos :)%0a(:title How-To: Install Ruby from Source on a New System:)%0a>>%3c%3c%0a
time=1388144981
title=How-To: Install Ruby from Source on a New System
author:1388144981=tamara
csum:1388144981=Update for ruby 2.1.0.
diff:1388144981:1372002168:=1,19c1,2%0a%3c [[#excerpt]]%0a%3c Installing [[Ruby]] can be difficult sometimes. With the number of%0a%3c different operating system distributions, number of versions, and%0a%3c possible local configurations, it is hard to make a one-stop install%0a%3c that fits every user's need.%0a%3c %0a%3c The primary resource for installing [[Ruby]] remains the%0a%3c [[http://www.ruby-lang.org/en/downloads/ | download page]] on the%0a%3c [[http://www.ruby-lang.org | ruby-lang]] site itself.%0a%3c %0a%3c If you can, you should first try to install [[Ruby]] using tools such%0a%3c as [[rvm]], [[rbenv]], [[ruby-build]], and so on.%0a%3c %0a%3c These represent the minimal set of steps to install [[Ruby]] on a%0a%3c [[Linux]] system from the source. To install [[Ruby]] from on a Mac,%0a%3c use [[HomeBrew]]. To install [[Ruby]] on [[Windows]], please see%0a%3c [[RubyInstaller -> http://rubyinstaller.org/ ]].%0a%3c [[#excerptend]]%0a%3c %0a---%0a> %0a> %0a22,28d4%0a%3c These instructions work for any [[Debian-based -> http://debian.org ]]%0a%3c linux system, as well as some others.%0a%3c %0a%3c The Debian system installer, [[apt]], is assumed here. Other linux%0a%3c distributions have different installers, and potentially other package%0a%3c names.%0a%3c %0a31,36d6%0a%3c (:source lang=bash    :)%0a%3c $ sudo -i%0a%3c Password: # enter your user's password%0a%3c $%0a%3c (:sourceend:)%0a%3c %0a40c10%0a%3c $ apt-get install %3cpackage> # see list below%0a---%0a> apt-get install %3cpackage> # see list below%0a73,81c43%0a%3c (:source lang=bash linenum tabwidth=2  :)%0a%3c $ apt-get install build-essential git-core curl bison openssl \%0a%3c libreadline6  libreadline6-dev zlib1g zlib1g-dev libssl-dev \%0a%3c libyaml-dev libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev \%0a%3c libcurl4-openssl-dev libopenssl-ruby apache2-prefork-dev libapr1-dev \%0a%3c libaprutil1-dev libx11-dev libffi-dev tcl-dev tk-dev %0a%3c (:sourceend:)%0a%3c %0a%3c %0a---%0a> %0a86c48%0a%3c (:source lang=bash linenums:)%0a---%0a> (:source lang=bash:)%0a88,90c50,52%0a%3c wget http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.0.tar.gz%0a%3c tar zxvf ruby-2.1.0.tar.gz%0a%3c cd ruby-2.1.0%0a---%0a> wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p429.tar.gz%0a> tar zxvf ruby-1.9.3-p429.tar.gz%0a> cd ruby-1.9.3-p429%0a95,113d56%0a%3c This is the point where you will actually configure, build, and%0a%3c install ruby onto your system. Deciding where to put the new version%0a%3c is something you have to consider.%0a%3c %0a%3c Installing into @@/usr@@ directory will replace the existing system%0a%3c ruby. This isn't a bad idea in all cases, but some packages and%0a%3c utilities may rely on features in the old version of ruby. Still, I%0a%3c haven't encountered any problems in do this on a modern running%0a%3c debian-based system.%0a%3c %0a%3c Installing into @@/usr/local@@ is a popular option, but you need to%0a%3c ensure that you have your environment set up to know which ruby to%0a%3c run. When logged in, it is rather simple to keep the @@/usr/local@@%0a%3c directory before the @@/usr@@ directory in your @@PATH@@ environment%0a%3c variable, which is all that should really be necessary. However, in%0a%3c other  environments, such as @@crontab@@ and other system settings,%0a%3c you might need to do a little more to ensure the @@PATH@@ is set%0a%3c correctly.%0a%3c %0a115,117c58,60%0a%3c ./configure --prefix=/usr # default setups%0a%3c make # compiles the source%0a%3c make install # installs the programs in /usr/bin, etc%0a---%0a> ./configure --prefix=/usr%0a> make%0a> make install%0a137,145d79%0a%3c [[http://bundler.io | @@bundler@@ ]] is probably the most important%0a%3c gem to install. It is used to manage gems for developing programs,%0a%3c libraries, ruby packages, and applications. Install it, and be happy.%0a%3c %0a%3c [[RubyOnRails|Rails]] is the premier web application framework based on [[Ruby]]%0a%3c and is the reason so many people learn Ruby. It's not the only one,%0a%3c so you don't have to install it, but it's really a good test of a new%0a%3c installation of ruby.%0a%3c %0a148,164d81%0a%3c Of note, since you've compiled and installed ruby as the system ruby,%0a%3c you will need to continue installing gems as the superuser, unless you%0a%3c set the environment variable @@GEM_PATH@@ in your user's @@.profile@@%0a%3c to something you can write to. This is the best way to do development,%0a%3c with your own local per-user set of gems. When you deploy your ruby%0a%3c projects, you'll be able to decide at that point where and how to%0a%3c install necessary gems.%0a%3c %0a%3c !! Create a new gem%0a%3c %0a%3c (:source lang=bash linenum:)%0a%3c $ mkdir -p ~/Projects/ruby_projects%0a%3c $ cd ~/Projects/ruby_projects%0a%3c $ bundle gem my_test_gem%0a%3c (:sourceend:)%0a%3c %0a%3c %0a167,170c84,85%0a%3c (:source lang=bash linenum:)%0a%3c $ mkdir -p ~/Websites/rails%0a%3c $ cd ~/Websites/rails%0a%3c $ rails new my_test_rails%0a---%0a> (:source lang=bash:)%0a> rails new myapp%0a171a87,90%0a> %0a> %0a> %0a> %0a
host:1388144981=174.53.192.61
author:1372002168=tamara
diff:1372002168:1372002014:=1,2c1,4%0a%3c %0a%3c %0a---%0a> [[#excerpt]]%0a> A step by step guide to creating a Ruby development appliance on a clean system.%0a> [[#excerptend]]%0a> %0a93c95%0a%3c Summary: A step-by-step recording of building a Ruby dev system from source%0a---%0a> Summary: A step-by-step recording of building a Ruby dev system on TKL Core%0a96,99c98,100%0a%3c Categories:[[!Articles]], [[!HowTos]]%0a%3c Tags: ruby, howtos%0a%3c (:tags-hide ruby, howtos :)%0a%3c (:title How-To: Install Ruby from Source on a New System:)%0a---%0a> Categories:[[!Articles]]%0a> Tags: ruby, turnkeylinux%0a> (:tags-hide ruby, turnkeylinux :)%0a
host:1372002168=71.63.215.130
author:1372002014=tamara
csum:1372002014=Page moved to Technology.BuildRubySystemFromSource from Technology.BuildRubySystemFromTKLCore
diff:1372002014:1372001990:=
host:1372002014=71.63.215.130
author:1372001990=tamara
diff:1372001990:1371978678:=2c2%0a%3c A step by step guide to creating a Ruby development appliance on a clean system.%0a---%0a> A step by step guide to creating a Ruby development appliance on TurnkeyLinux Core appliance.%0a5,8c5,15%0a%3c !! Install your favourite distribution%0a%3c %0a%3c !! Log in as root%0a%3c %0a---%0a> !! Create a core appliance on hub.turnkeylinux.com%0a> %0a> See https://hub.turnkeylinux.org/ -- you need to get an AWS account and provide a few details. This step is not necessary, of course, you can install similarly on any debian-based distro on bare metal, in a VM, in a partition, on a VPS, etc.%0a> %0a> !! Log in%0a> %0a> (:source lang=text:)%0a> core login: root%0a> Password:%0a> (:sourceend:)%0a> %0a11,16d17%0a%3c (:source lang=bash:)%0a%3c apt-get install %3cpackage> # see list below%0a%3c (:sourceend:)%0a%3c %0a%3c !!! Ruby needs these to build correctly.%0a%3c %0a83,89d83%0a%3c %0a%3c !! Create a test rails app%0a%3c %0a%3c (:source lang=bash:)%0a%3c rails new myapp%0a%3c (:sourceend:)%0a%3c %0a
host:1372001990=71.63.215.130
author:1371978678=tamara
diff:1371978678:1371965683:=16,50c16,17%0a%3c !! Install Packages Ruby Needs to Build from Source%0a%3c %0a%3c * build-essential%0a%3c * git-core%0a%3c * curl%0a%3c * bison%0a%3c * openssl%0a%3c * libreadline6%0a%3c * libreadline6-dev%0a%3c * zlib1g%0a%3c * zlib1g-dev%0a%3c * libssl-dev%0a%3c * libyaml-dev%0a%3c * libxml2-dev%0a%3c * libxslt-dev%0a%3c * autoconf%0a%3c * libc6-dev%0a%3c * ncurses-dev%0a%3c * libcurl4-openssl-dev%0a%3c * libopenssl-ruby%0a%3c * apache2-prefork-dev%0a%3c * libapr1-dev%0a%3c * libaprutil1-dev%0a%3c * libx11-dev%0a%3c * libffi-dev%0a%3c * tcl-dev%0a%3c * tk-dev %0a%3c %0a%3c These will pull in other packages as needed.%0a%3c %0a%3c %0a%3c !! Acquire the Ruby Source%0a%3c %0a%3c Download the latest version of Ruby here: http://www.ruby-lang.org/en/downloads/ under the Compiling Ruby — Source code section.%0a%3c %0a---%0a> !! Install build-essential:%0a> %0a52,55c19%0a%3c cd /usr/src%0a%3c wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p429.tar.gz%0a%3c tar zxvf ruby-1.9.3-p429.tar.gz%0a%3c cd ruby-1.9.3-p429%0a---%0a> apt-get install build-essential%0a58,59c22,23%0a%3c !! Do the needful%0a%3c %0a---%0a> !! Install ruby 1.9.x%0a> %0a61,63c25,27%0a%3c ./configure --prefix=/usr%0a%3c make%0a%3c make install%0a---%0a> apt-get install ruby1.9.1%0a> # and suggested packages%0a> apt-get install ruby1.9.1-examples ri1.9.1 graphviz ruby1.9.1-dev%0a66,67c30,32%0a%3c !! Test the install%0a%3c %0a---%0a> %0a> !! Make useful links%0a> %0a69,73c34,38%0a%3c cd%0a%3c which ruby; ruby --version%0a%3c which irb; irb --version%0a%3c which gem; gem --version%0a%3c which rake; rake --version%0a---%0a> cd /usr/bin%0a> ln -s ruby1.9.1 ruby%0a> ln -s gem1.9.1 gem%0a> ln -s irb1.9.1 irb%0a> ln -s rake1.9.1 rake%0a76,77c41,42%0a%3c !! Install some gems%0a%3c %0a---%0a> !! Version check%0a> %0a79,80c44,47%0a%3c gem install bundler%0a%3c gem install rails%0a---%0a> ruby -v # => ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]%0a> gem -v # => 1.3.7%0a> irb -v # => irb 0.9.6(09/06/30)%0a> rake -V # => rake, version 0.8.7%0a82,85c49,64%0a%3c %0a%3c !! Logout from root, login as user%0a%3c %0a%3c %0a---%0a>   %0a> !! Install bcrypt-ruby gem%0a> %0a> (:source lang=bash:)%0a> gem install bcrypt-ruby%0a> (:sourceend:)%0a> %0a> ''Output:''%0a> %0a> (:source lang=text:)%0a> Building native extensions. This could take a while...%0a> Successfully installed bcrypt-ruby-3.0.1%0a> 1 gem installed%0a> Installing ri documentation for bcrypt-ruby-3.0.1...%0a> Installing RDoc documentation for bcrypt-ruby-3.0.1... %0a> (:sourceend:)%0a
host:1371978678=71.63.215.130
author:1371965683=tamara
diff:1371965683:1371965493:=6,7d5%0a%3c %0a%3c See https://hub.turnkeylinux.org/ -- you need to get an AWS account and provide a few details. This step is not necessary, of course, you can install similarly on any debian-based distro on bare metal, in a VM, in a partition, on a VPS, etc.%0a
host:1371965683=71.63.215.130
author:1371965493=tamara
diff:1371965493:1371965459:=
host:1371965493=71.63.215.130
author:1371965459=tamara
diff:1371965459:1371965359:=5,8c5,8%0a%3c !! Create a core appliance on hub.turnkeylinux.com%0a%3c %0a%3c !! Log in%0a%3c %0a---%0a> # Create a core appliance on hub.turnkeylinux.com%0a> %0a> # Log in%0a> %0a14,15c14,15%0a%3c !! Install build-essential:%0a%3c %0a---%0a> # Install build-essential:%0a> %0a20,21c20,21%0a%3c !! Install ruby 1.9.x%0a%3c %0a---%0a> # Install ruby 1.9.x%0a> %0a24d23%0a%3c # and suggested packages%0a29,30c28,29%0a%3c !! Make useful links%0a%3c %0a---%0a> # Make useful names%0a> %0a39,40c38,39%0a%3c !! Version check%0a%3c %0a---%0a> # Version check%0a> %0a48c47%0a%3c !! Install bcrypt-ruby gem%0a---%0a> # Install bcrypt-ruby gem%0a
host:1371965459=71.63.215.130
author:1371965359=tamara
diff:1371965359:1371965019:=9,13d8%0a%3c (:source lang=text:)%0a%3c core login: root%0a%3c Password:%0a%3c (:sourceend:)%0a%3c %0a16,19c11,12%0a%3c (:source lang=bash:)%0a%3c apt-get install build-essential%0a%3c (:sourceend:)%0a%3c %0a---%0a>   apt-get install build-essential%0a> %0a22,27c15,17%0a%3c (:source lang=bash:)%0a%3c apt-get install ruby1.9.1%0a%3c apt-get install ruby1.9.1-examples ri1.9.1 graphviz ruby1.9.1-dev%0a%3c (:sourceend:)%0a%3c %0a%3c %0a---%0a>   apt-get install ruby1.9.1%0a>   apt-get install ruby1.9.1-examples ri1.9.1 graphviz ruby1.9.1-dev%0a> %0a30,37c20,25%0a%3c (:source lang=bash:)%0a%3c cd /usr/bin%0a%3c ln -s ruby1.9.1 ruby%0a%3c ln -s gem1.9.1 gem%0a%3c ln -s irb1.9.1 irb%0a%3c ln -s rake1.9.1 rake%0a%3c (:sourceend:)%0a%3c %0a---%0a>   cd /usr/bin%0a>   ln -s ruby1.9.1 ruby%0a>   ln -s gem1.9.1 gem%0a>   ln -s irb1.9.1 irb%0a>   ln -s rake1.9.1 rake%0a> %0a40,45c28,35%0a%3c (:source lang=bash:)%0a%3c ruby -v # => ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]%0a%3c gem -v # => 1.3.7%0a%3c irb -v # => irb 0.9.6(09/06/30)%0a%3c rake -V # => rake, version 0.8.7%0a%3c (:sourceend:)%0a---%0a>   root@core ~# ruby -v%0a>   ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]%0a>   root@core ~# gem -v%0a>   1.3.7%0a>   root@core ~# irb -v%0a>   irb 0.9.6(09/06/30)%0a>   root@core ~# rake -V%0a>   rake, version 0.8.7%0a49,61c39,48%0a%3c (:source lang=bash:)%0a%3c gem install bcrypt-ruby%0a%3c (:sourceend:)%0a%3c %0a%3c ''Output:''%0a%3c %0a%3c (:source lang=text:)%0a%3c Building native extensions. This could take a while...%0a%3c Successfully installed bcrypt-ruby-3.0.1%0a%3c 1 gem installed%0a%3c Installing ri documentation for bcrypt-ruby-3.0.1...%0a%3c Installing RDoc documentation for bcrypt-ruby-3.0.1... %0a%3c (:sourceend:)%0a---%0a>   root@core ~# gem install bcrypt-ruby%0a>   Building native extensions. This could take a while...%0a>   Successfully installed bcrypt-ruby-3.0.1%0a>   1 gem installed%0a>   Installing ri documentation for bcrypt-ruby-3.0.1...%0a>   Installing RDoc documentation for bcrypt-ruby-3.0.1... %0a> %0a> %0a> %0a> %0a
host:1371965359=71.63.215.130
author:1371965019=tamara
csum:1371965019=new page
diff:1371965019:1371964945:=37,44d36%0a%3c # Install bcrypt-ruby gem%0a%3c %0a%3c   root@core ~# gem install bcrypt-ruby%0a%3c   Building native extensions. This could take a while...%0a%3c   Successfully installed bcrypt-ruby-3.0.1%0a%3c   1 gem installed%0a%3c   Installing ri documentation for bcrypt-ruby-3.0.1...%0a%3c   Installing RDoc documentation for bcrypt-ruby-3.0.1... %0a
host:1371965019=71.63.215.130
author:1371964945=tamara
diff:1371964945:1371964858:=27,36d26%0a%3c %0a%3c   root@core ~# ruby -v%0a%3c   ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]%0a%3c   root@core ~# gem -v%0a%3c   1.3.7%0a%3c   root@core ~# irb -v%0a%3c   irb 0.9.6(09/06/30)%0a%3c   root@core ~# rake -V%0a%3c   rake, version 0.8.7%0a%3c   %0a
host:1371964945=71.63.215.130
author:1371964858=tamara
diff:1371964858:1371964606:=17,28d16%0a%3c %0a%3c # Make useful names%0a%3c %0a%3c   cd /usr/bin%0a%3c   ln -s ruby1.9.1 ruby%0a%3c   ln -s gem1.9.1 gem%0a%3c   ln -s irb1.9.1 irb%0a%3c   ln -s rake1.9.1 rake%0a%3c %0a%3c # Version check%0a%3c %0a%3c %0a
host:1371964858=71.63.215.130
author:1371964606=tamara
diff:1371964606:1371964248:=12,16d11%0a%3c %0a%3c # Install ruby 1.9.x%0a%3c %0a%3c   apt-get install ruby1.9.1%0a%3c   apt-get install ruby1.9.1-examples ri1.9.1 graphviz ruby1.9.1-dev%0a
host:1371964606=71.63.215.130
author:1371964248=tamara
diff:1371964248:1371964248:=1,23d0%0a%3c [[#excerpt]]%0a%3c A step by step guide to creating a Ruby development appliance on TurnkeyLinux Core appliance.%0a%3c [[#excerptend]]%0a%3c %0a%3c # Create a core appliance on hub.turnkeylinux.com%0a%3c %0a%3c # Log in%0a%3c %0a%3c # Install build-essential:%0a%3c %0a%3c   apt-get install build-essential%0a%3c %0a%3c %0a%3c %0a%3c %0a%3c >>comment%3c%3c%0a%3c Summary: A step-by-step recording of building a Ruby dev system on TKL Core%0a%3c Parent:(Technology.)Ruby%0a%3c IncludeMe:[[(Technology.)Ruby]]%0a%3c Categories:[[!Articles]]%0a%3c Tags: ruby, turnkeylinux%0a%3c (:tags-hide ruby, turnkeylinux :)%0a%3c >>%3c%3c%0a
host:1371964248=71.63.215.130
