version=pmwiki-2.2.36 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10.5; rv:10.0.2) Gecko/20100101 Firefox/10.0.2
author=tamara
charset=ISO-8859-1
csum=new best practice
ctime=1331096594
host=71.63.211.0
name=Technology.PreventingClickFraud
rev=1
targets=Technology.WebDevelopment,Technology.IncludeMe,Category.BestPractices
text=(:if false:)%0aSummary:From an email thread in the php-general mailing list%0aParent:(Technology.)WebDevelopment%0aIncludeMe:[[Technology.WebDevelopment]]%0aCategories:[[!BestPractices]]%0aTags: click fraud%0a(:tags-hide click fraud:)%0a(:ifend:)%0a%0a%0a(:source lang=email -getcode:)%0aDate: Sun, 01 Jan 2012 19:08:46 +0000 [2012-01-01 01:08:46 PM CST]%0aFrom: Ashley Sheridan %3cash [snail] ashleysheridan.co.uk>%0aSubject: Re: [PHP] count clicks to count most important news %0a%0aOn Sun, 2012-01-01 at 11:49 -0500, Tedd Sperling wrote:%0a> On Jan 1, 2012, at 11:26 AM, muad shibani wrote:%0a> > I have a website that posts the most important news according%0a> > to the number %0a> > of clicks to that news%0a> > the question is : what is the best  way to prevent multiple%0a> > clicks from the  %0a> > same visitor?%0a>%0a> Not a fool-proof method, but use Javascript on the client-side%0a> to stop users' from continuous clicking. %0a>%0a> Then create a token and verify the click on the server-side%0a> before considering the click as being acceptable. %0a>%0a> Cheers,%0a>%0a> tedd%0a>%0a> _____________________%0a> tedd [snail] sperling.com%0a> http://sperling.com%0a%0aThere are still problems with this, GET data (which%0aessentially only what a clicked link would produce if you%0aleave Javascript out the equation - you can't rely on%0aJavascript) shouldn't be used to trigger a change on the%0aserver (in your case a counter increment)%0a%0aI did something similar for a competition site a few years%0aago, and stupidly didn't think about this at the%0atime. Someone ended up gaming the system by including an%0aimage with the clicked-through URL in the src attribute, and%0aput that on their MySpace profile page, which had more than%0aa few visitors. Each of those visitors browser attempted to%0agrab that "image" which registered a click, and because of%0athe number of unique visitors, the clicks were registered as%0agenuine.%0a%0aI'd recommend using POST data for this reason, as it's a lot%0amore difficult for people to game.%0a%0a-- %0aThanks,%0aAsh%0ahttp://www.ashleysheridan.co.uk%0a(:sourceend:)%0a%0aAnd the next message goes further:%0a%0a(:source lang=email -getcode:)%0aDate: Sun, 01 Jan 2012 21:02:56 +0100 [2012-01-01 02:02:56 PM CST]%0aFrom: Maciek Sokolewicz %3cmaciek.sokolewicz[snail]gmail.com>%0aSubject: Re: [PHP] count clicks to count most important news %0a%0aOn 01-01-2012 20:08, Ashley Sheridan wrote:%0a[....snipped....]%0a%0aI agree, POST data is indeed the way to go here. Personally,%0aI would use a "like" image-like thing which is actually a%0abutton, using some clever javascript (personally I would use%0ajquery for this) you can then POST data to the server based%0aon the click. Then set a cookie which disables the button%0a(and keeps it disabled on future visits). This should%0aprevent average person from repeatedly clicking it. You%0acould also log the person's IP adress and filter based on%0athat aswell; combining various methods would be best in this%0acase I think.%0a%0aTo prevent the method which Ashley mentioned, using POST%0adata isn't enough. You would want to guarantee that the link%0acame from YOUR server instead of some different place.%0aThere are multiple ways to do this:%0a%0a- use a unique key as an argument in the POST which can only%0abe "clicked" once. Register the key in a database before%0aserving the page, and then unregister it once it has been%0aserved and clicked. Though if a person were to repeatedly%0aopen the page, your cache would be exhausted, and the method%0awould become useless.%0a%0a- require a referrer address to come from your domain; also%0areasonably easily circumvented in this case%0a%0a- there are more, but it really depends on how much effort%0ayou want to put into preventing attacks and how much effort%0ayou expect others to put into attacking it. For example,%0alarge sites like youtube are sure to use extensive measures%0ato prevent people from spam-clicking in any way. While sites%0athat only cater to say 3 visitors a month don't require all%0athat effort in the first place.%0a%0aHope that helps,%0a- Tul%0a(:sourceend:)%0a%0aAnd yet more information about this:%0a%0a(:source lang=email -getcode:)%0aDate: Sun, 1 Jan 2012 20:10:26 +0000 [2012-01-01 02:10:26 PM CST]%0aFrom: Stuart Dallas %3cstuart[snail]3ft9.com>%0aSubject: Re: [PHP] count clicks to count most important news %0a%0aOn 1 Jan 2012, at 16:26, muad shibani wrote:%0a> I have a website that posts the most important news%0a> according to the number of clicks to that news the%0a> question is : what is the best way to prevent multiple%0a> clicks from the same visitor?%0a%0aI'm assuming this is not a voting system, and the news items%0ayou're counting are sourced from your own site and, with all%0adue respect to Ash, unlikely to be a target for false%0aclicks. All you're really wanting to do is prevent the site%0afrom registering multiple hits from the same user in a short%0aperiod of time.%0a%0aI would probably use memcached on the server-side to store%0ashort-term information about clicks. When a news item is%0aloaded...%0a%0a1) Construct the memcache key:%0a   "newsclick_%3carticle_id>_%3cip_address>".%0a%0a2) Fetch the key from memcache.%0a%0a3a) If it does not exist, log the hit.%0a%0a3b) If it does exist, compare time() with the value and only%0a    log the hit if time() is greater.%0a%0a4) Store the key with a value of time() + 300 and an expiry%0a   of the same value.%0a%0aThis will prevent hits being logged for the same news item%0afrom the same IP address within 5 minutes of other hits.%0a%0aOther alternatives would be to use cookies (could get messy,%0aand not very reliable since it requires the response from%0aclick 1 to be processed before click 2 gets started),%0aJavascript (as suggested by tedd but without the token - it%0awould work pretty well and would be a lot easier to%0aimplement than the above, but you sacrifice having full%0acontrol over it).%0a%0aIf I'm interpreting the requirement correctly my solution is%0aalmost certainly overkill, and a simple Javascript solution%0awould be more than sufficient.%0a%0a-Stuart%0a%0a-- %0aStuart Dallas%0a3ft9 Ltd%0ahttp://3ft9.com/%0a(:sourceend:)%0a
time=1331096594
author:1331096594=tamara
csum:1331096594=new best practice
diff:1331096594:1331096594:=1,170d0%0a%3c (:if false:)%0a%3c Summary:From an email thread in the php-general mailing list%0a%3c Parent:(Technology.)WebDevelopment%0a%3c IncludeMe:[[Technology.WebDevelopment]]%0a%3c Categories:[[!BestPractices]]%0a%3c Tags: click fraud%0a%3c (:tags-hide click fraud:)%0a%3c (:ifend:)%0a%3c %0a%3c %0a%3c (:source lang=email -getcode:)%0a%3c Date: Sun, 01 Jan 2012 19:08:46 +0000 [2012-01-01 01:08:46 PM CST]%0a%3c From: Ashley Sheridan %3cash [snail] ashleysheridan.co.uk>%0a%3c Subject: Re: [PHP] count clicks to count most important news %0a%3c %0a%3c On Sun, 2012-01-01 at 11:49 -0500, Tedd Sperling wrote:%0a%3c > On Jan 1, 2012, at 11:26 AM, muad shibani wrote:%0a%3c > > I have a website that posts the most important news according%0a%3c > > to the number %0a%3c > > of clicks to that news%0a%3c > > the question is : what is the best  way to prevent multiple%0a%3c > > clicks from the  %0a%3c > > same visitor?%0a%3c >%0a%3c > Not a fool-proof method, but use Javascript on the client-side%0a%3c > to stop users' from continuous clicking. %0a%3c >%0a%3c > Then create a token and verify the click on the server-side%0a%3c > before considering the click as being acceptable. %0a%3c >%0a%3c > Cheers,%0a%3c >%0a%3c > tedd%0a%3c >%0a%3c > _____________________%0a%3c > tedd [snail] sperling.com%0a%3c > http://sperling.com%0a%3c %0a%3c There are still problems with this, GET data (which%0a%3c essentially only what a clicked link would produce if you%0a%3c leave Javascript out the equation - you can't rely on%0a%3c Javascript) shouldn't be used to trigger a change on the%0a%3c server (in your case a counter increment)%0a%3c %0a%3c I did something similar for a competition site a few years%0a%3c ago, and stupidly didn't think about this at the%0a%3c time. Someone ended up gaming the system by including an%0a%3c image with the clicked-through URL in the src attribute, and%0a%3c put that on their MySpace profile page, which had more than%0a%3c a few visitors. Each of those visitors browser attempted to%0a%3c grab that "image" which registered a click, and because of%0a%3c the number of unique visitors, the clicks were registered as%0a%3c genuine.%0a%3c %0a%3c I'd recommend using POST data for this reason, as it's a lot%0a%3c more difficult for people to game.%0a%3c %0a%3c -- %0a%3c Thanks,%0a%3c Ash%0a%3c http://www.ashleysheridan.co.uk%0a%3c (:sourceend:)%0a%3c %0a%3c And the next message goes further:%0a%3c %0a%3c (:source lang=email -getcode:)%0a%3c Date: Sun, 01 Jan 2012 21:02:56 +0100 [2012-01-01 02:02:56 PM CST]%0a%3c From: Maciek Sokolewicz %3cmaciek.sokolewicz[snail]gmail.com>%0a%3c Subject: Re: [PHP] count clicks to count most important news %0a%3c %0a%3c On 01-01-2012 20:08, Ashley Sheridan wrote:%0a%3c [....snipped....]%0a%3c %0a%3c I agree, POST data is indeed the way to go here. Personally,%0a%3c I would use a "like" image-like thing which is actually a%0a%3c button, using some clever javascript (personally I would use%0a%3c jquery for this) you can then POST data to the server based%0a%3c on the click. Then set a cookie which disables the button%0a%3c (and keeps it disabled on future visits). This should%0a%3c prevent average person from repeatedly clicking it. You%0a%3c could also log the person's IP adress and filter based on%0a%3c that aswell; combining various methods would be best in this%0a%3c case I think.%0a%3c %0a%3c To prevent the method which Ashley mentioned, using POST%0a%3c data isn't enough. You would want to guarantee that the link%0a%3c came from YOUR server instead of some different place.%0a%3c There are multiple ways to do this:%0a%3c %0a%3c - use a unique key as an argument in the POST which can only%0a%3c be "clicked" once. Register the key in a database before%0a%3c serving the page, and then unregister it once it has been%0a%3c served and clicked. Though if a person were to repeatedly%0a%3c open the page, your cache would be exhausted, and the method%0a%3c would become useless.%0a%3c %0a%3c - require a referrer address to come from your domain; also%0a%3c reasonably easily circumvented in this case%0a%3c %0a%3c - there are more, but it really depends on how much effort%0a%3c you want to put into preventing attacks and how much effort%0a%3c you expect others to put into attacking it. For example,%0a%3c large sites like youtube are sure to use extensive measures%0a%3c to prevent people from spam-clicking in any way. While sites%0a%3c that only cater to say 3 visitors a month don't require all%0a%3c that effort in the first place.%0a%3c %0a%3c Hope that helps,%0a%3c - Tul%0a%3c (:sourceend:)%0a%3c %0a%3c And yet more information about this:%0a%3c %0a%3c (:source lang=email -getcode:)%0a%3c Date: Sun, 1 Jan 2012 20:10:26 +0000 [2012-01-01 02:10:26 PM CST]%0a%3c From: Stuart Dallas %3cstuart[snail]3ft9.com>%0a%3c Subject: Re: [PHP] count clicks to count most important news %0a%3c %0a%3c On 1 Jan 2012, at 16:26, muad shibani wrote:%0a%3c > I have a website that posts the most important news%0a%3c > according to the number of clicks to that news the%0a%3c > question is : what is the best way to prevent multiple%0a%3c > clicks from the same visitor?%0a%3c %0a%3c I'm assuming this is not a voting system, and the news items%0a%3c you're counting are sourced from your own site and, with all%0a%3c due respect to Ash, unlikely to be a target for false%0a%3c clicks. All you're really wanting to do is prevent the site%0a%3c from registering multiple hits from the same user in a short%0a%3c period of time.%0a%3c %0a%3c I would probably use memcached on the server-side to store%0a%3c short-term information about clicks. When a news item is%0a%3c loaded...%0a%3c %0a%3c 1) Construct the memcache key:%0a%3c    "newsclick_%3carticle_id>_%3cip_address>".%0a%3c %0a%3c 2) Fetch the key from memcache.%0a%3c %0a%3c 3a) If it does not exist, log the hit.%0a%3c %0a%3c 3b) If it does exist, compare time() with the value and only%0a%3c     log the hit if time() is greater.%0a%3c %0a%3c 4) Store the key with a value of time() + 300 and an expiry%0a%3c    of the same value.%0a%3c %0a%3c This will prevent hits being logged for the same news item%0a%3c from the same IP address within 5 minutes of other hits.%0a%3c %0a%3c Other alternatives would be to use cookies (could get messy,%0a%3c and not very reliable since it requires the response from%0a%3c click 1 to be processed before click 2 gets started),%0a%3c Javascript (as suggested by tedd but without the token - it%0a%3c would work pretty well and would be a lot easier to%0a%3c implement than the above, but you sacrifice having full%0a%3c control over it).%0a%3c %0a%3c If I'm interpreting the requirement correctly my solution is%0a%3c almost certainly overkill, and a simple Javascript solution%0a%3c would be more than sufficient.%0a%3c %0a%3c -Stuart%0a%3c %0a%3c -- %0a%3c Stuart Dallas%0a%3c 3ft9 Ltd%0a%3c http://3ft9.com/%0a%3c (:sourceend:)%0a
host:1331096594=71.63.211.0
