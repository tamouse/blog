version=pmwiki-2.2.36 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_8) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19
author=ImportText
charset=ISO-8859-1
csum=add summary and categories
ctime=1202334230
host=127.0.0.1
name=Technology.RunningEclipseWithMoreMemory
rev=4
targets=Technology.RunningEclipseWithMoreMemory
text=[[#excerpt]]%0aEclipse basically is running the java engine, which sets aside 256MB of memory for use in the virtual machine. You can pass arguments on to the java program from the eclipse command line. So the get the most out of the memory you've got on your machine, run eclipse with the following parameters:%0a%0a(:source lang=bash:)%0aeclipse -vmargs -`Xmx1024M%0a(:sourceend:)%0a%0a[[#excerptend]]%0a%0a%0a%0awhere you put in the size of your memory after the mx. 1G is shown here as an example. You can use abbreviations like 512M, 1k, etc. and the java engine will understand them.%0a%0a(:Summary:solves a problem of eclipse always running out of memory:)%0a(:Parent:(Technology.)Eclipse:)%0a(:IncludeMe:[[(Technology.)Eclipse]]:)%0a(:Categories:[[!HowTos]]:)%0a(:Tags: eclipse, tools:)%0a(:tags-hide eclipse, tools :)%0a
time=1334714369
author:1334714369=ImportText
diff:1334714369:1274232379:=1c1,3%0a%3c [[#excerpt]]%0a---%0a> (:Summary:solves a problem of eclipse always running out of memory:)%0a> %25trail%25 %3c%3c|LinuxStuff|>>%0a> %0a4,11c6,7%0a%3c (:source lang=bash:)%0a%3c eclipse -vmargs -`Xmx1024M%0a%3c (:sourceend:)%0a%3c %0a%3c [[#excerptend]]%0a%3c %0a%3c %0a%3c %0a---%0a>      : eclipse -vmargs -`Xmx1024M%0a> %0a14,19c10,12%0a%3c (:Summary:solves a problem of eclipse always running out of memory:)%0a%3c (:Parent:(Technology.)Eclipse:)%0a%3c (:IncludeMe:[[(Technology.)Eclipse]]:)%0a%3c (:Categories:[[!HowTos]]:)%0a%3c (:Tags: eclipse, tools:)%0a%3c (:tags-hide eclipse, tools :)%0a---%0a> %25trail%25 %3c%3c|LinuxStuff|>>%0a> %0a> %25lframe%25 '''Categories:''' [[!ComputerStuff]]%0a
host:1334714369=127.0.0.1
author:1274232379=tamara
csum:1274232379=add summary and categories
diff:1274232379:1202334377:minor=1,3c1,2%0a%3c (:Summary:solves a problem of eclipse always running out of memory:)%0a%3c %25trail%25 %3c%3c|LinuxStuff|>>%0a%3c %0a---%0a> %3c%3c|LinuxStuff|>>%0a> %0a6,7c5,6%0a%3c      : eclipse -vmargs -`Xmx1024M%0a%3c %0a---%0a>    @@# eclipse -vmargs -`Xmx1024M@@%0a> %0a10,12c9%0a%3c %25trail%25 %3c%3c|LinuxStuff|>>%0a%3c %0a%3c %25lframe%25 '''Categories:''' [[!ComputerStuff]]%0a---%0a> %3c%3c|LinuxStuff|>>%0a
host:1274232379=71.193.74.221
author:1202334377=TamaraTemple
csum:1202334377=remove wikiwording on second paramter of eclipse command
diff:1202334377:1202334230:minor=5,6c5,6%0a%3c    @@# eclipse -vmargs -`Xmx1024M@@%0a%3c %0a---%0a>    @@# eclipse -vmargs -Xmx1024M@@%0a> %0a
host:1202334377=216.52.235.101
author:1202334230=TamaraTemple
csum:1202334230=new
diff:1202334230:1202334230:=1,9d0%0a%3c %3c%3c|LinuxStuff|>>%0a%3c %0a%3c Eclipse basically is running the java engine, which sets aside 256MB of memory for use in the virtual machine. You can pass arguments on to the java program from the eclipse command line. So the get the most out of the memory you've got on your machine, run eclipse with the following parameters:%0a%3c %0a%3c    @@# eclipse -vmargs -Xmx1024M@@%0a%3c %0a%3c where you put in the size of your memory after the mx. 1G is shown here as an example. You can use abbreviations like 512M, 1k, etc. and the java engine will understand them.%0a%3c %0a%3c %3c%3c|LinuxStuff|>>%0a
host:1202334230=216.52.235.101
