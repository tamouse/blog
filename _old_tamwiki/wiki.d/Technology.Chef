version=pmwiki-2.2.43 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.101 Safari/537.11
author=tamara
charset=ISO-8859-1
csum=add data bag edit
ctime=1356729753
host=75.144.38.217
name=Technology.Chef
rev=2
targets=Technology.Chef,Technology.Tools,Technology.IncludeMe,Category.Links
text=>>comment%3c%3c%0aSummary:Chef is an application/server deployment facility profided by Ops Code both as a hosted and a standalone version%0aParent:(Technology.)Tools%0aIncludeMe:[[(Technology.)Tools]]%0aCategories:[[!Links]]%0aTags: tools, deployment, server administration, devops%0a(:tags-hide tools, deployment, server administration, devops :)%0a>>%3c%3c%0a%0a[[#excerpt]]%0aIf you have an application that has several moving parts, authentication credentials, and uses various services and daemons on the target environment, and possibly several target environments (i.e. production, staging, testing, etc), [[Chef -> http://www.opscode.com/chef/]] is a tool that can help tremendously. %0a[[#excerptend]]%0a%0a>>quote%3c%3c%0a!! Reality-Based automation for the Cloud.%0a%0aChef is an open-source systems integration framework built specifically for automating the cloud. No matter how complex the realities of your business, Chef makes it easy to deploy servers and scale applications throughout your entire infrastructure. Because it combines the fundamental elements of configuration management and service oriented architectures with the full power of Ruby, Chef makes it easy to create an elegant, fully automated infrastructure.%0a>>%3c%3c%0a%0a!! Quick hits%0a%0a%0a!!! Editing a secure data bag:%0a%0a(:source lang=bash -getcode:)%0a$ knife data bag edit secure ENV --secret-file PATH/TO/Data_Key%0a(:sourceend:)%0a%0a%0a%0a!!! Changing an environment with knife:%0a%0a(:source lang=bash -getcode:)%0a$ knife environment from file environments/$ENVIRONMENT.rb %0a(:sourceend:)%0a%0a!!! Uploading a new cookbook with knife:%0a%0a(:source lang=bash -getcode:)%0a$ knife cookbook upload $COOKBOOKNAME%0a(:sourceend:)%0a%0a!! Making an update to a cookbook, but only using it in some environments%0a%0aEach cookbook has a [@metadata.rb@] file that contains the revision of the cookbook:%0a%0a(:source lang=ruby header="metadata.rb file for the myapp cookbook":)%0amaintainer "tamouse"%0amaintainer_email "tamouse@gmail.com"%0alicense "MIT"%0adescription "Installs/Configures MyApp"%0along_description IO.read(File.join(File.dirname(__FILE__), 'README.md'))%0aversion "0.2.6" # %3c---- this is where you manage the version number%0adepends "unicorn"%0adepends "application"%0adepends "application_ruby"%0adepends "nodejs"%0adepends "mysql"%0adepends "rbenv"%0adepends "database"%0adepends "logrotate"%0a(:sourceend:)%0a%0athe [@version@] line is set to the latest version of a cookbook. Hosted Chef keeps track of versions of cookbooks, so environments can choose which one they want to use. In the environment file, you specify the set of cookbooks to include using the "cookbooks" JSON object:%0a%0a(:source lang=ruby header="Partial contents of an environment file in chef":)%0acookbook_versions({%0a                      "apache2" => "= 1.1.10",%0a                      "application" => "= 1.0.1",%0a                      "application_java" => "= 1.0.0",%0a                      "application_ruby" => "= 1.0.8",%0a                      "apt" => "= 1.4.2",%0a                      "aws" => "= 0.100.0",%0a                      "bind9" => "= 0.1.3",%0a                      "bluepill" => "= 1.0.4",%0a                      "build-essential" => "= 1.0.2",%0a                      "chef-client" => "= 1.1.3",%0a                      "chef_handler" => "= 1.0.6",%0a                      "database" => "= 1.2.0",%0a                      "dmg" => "= 1.0.0",%0a                      "erlang" => "= 1.0.0",%0a                      "git" => "= 1.0.0",%0a                      "gpg" => "= 0.0.1",%0a                      "gunicorn" => "= 1.0.0",%0a                      "haproxy" => "= 1.0.5",%0a                      "iptables" => "= 0.10.0",%0a                      "java" => "= 1.5.0",%0a                      "jetty" => "= 0.0.1",%0a                      "jpackage" => "= 0.10.0",%0a                      "keepalived" => "= 0.8.2",%0a                      "logrotate" => "= 0.8.2",%0a                      "memcached" => "= 1.0.3",%0a                      "myapp" => "= 0.2.6", # %3c--- this is where you say which version of the myapp cookbook to use%0a                      "mysql" => "= 1.2.6",%0a                      "newrelic" => "= 0.2.6",%0a                      "nginx" => "= 0.101.6",%0a                      "nodejs" => "= 1.0.1",%0a                      "ohai" => "= 1.0.2",%0a                      "openssl" => "= 1.0.0",%0a                      "passenger_apache2" => "= 0.99.4",%0a                      "php" => "= 1.0.2",%0a                      "postfix" => "= 1.2.0",%0a                      "postgresql" => "= 0.99.4",%0a                      "python" => "= 1.0.6",%0a                      "rabbitmq" => "= 1.4.2",%0a                      "rbenv" => "= 1.4.0",%0a                      "rubygems" => "= 0.2.0",%0a                      "runit" => "= 0.15.0",%0a                      "rvm" => "= 0.9.1",%0a                      "scout-agent" => "= 1.0.0",%0a                      "solr-jetty" => "= 0.0.1",%0a                      "solr-tomcat" => "= 0.0.3",%0a                      "sudo" => "= 1.1.0",%0a                      "tomcat" => "= 0.10.4",%0a                      "unicorn" => "= 1.0.4",%0a                      "users" => "= 1.1.2",%0a                      "windows" => "= 1.3.0",%0a                      "wordpress" => "= 0.8.8",%0a                      "xfs" => "= 1.0.0",%0a                      "xml" => "= 1.0.4",%0a                      "yum" => "= 0.6.0",%0a                      "common" => "= 0.0.2"%0a%0a                  })%0a(:sourceend:)%0a%0aIf you have multiple environments, then you can rev the myapp cookbook, and specify the version string for only those environments that need the new aspects of the cookbook, and leave the others alone. For example, you may have a handful of testing environments for various reasons, and you can have a testing envrionment that is the only one that gets the new version bump for you app until it's tested adequately. As the features of your app are promoted from development to testing to staging to production, you can modify each of the corresponding environment files as necessary.%0a
time=1356730915
author:1356730915=tamara
csum:1356730915=add data bag edit
diff:1356730915:1356729753:=22,30d21%0a%3c %0a%3c !!! Editing a secure data bag:%0a%3c %0a%3c (:source lang=bash -getcode:)%0a%3c $ knife data bag edit secure ENV --secret-file PATH/TO/Data_Key%0a%3c (:sourceend:)%0a%3c %0a%3c %0a%3c %0a33c24%0a%3c (:source lang=bash -getcode:)%0a---%0a> (:source lang=bash:)%0a39c30%0a%3c (:source lang=bash -getcode:)%0a---%0a> (:source lang=bash:)%0a
host:1356730915=75.144.38.217
author:1356729753=tamara
csum:1356729753=new page
diff:1356729753:1356729753:=1,118d0%0a%3c >>comment%3c%3c%0a%3c Summary:Chef is an application/server deployment facility profided by Ops Code both as a hosted and a standalone version%0a%3c Parent:(Technology.)Tools%0a%3c IncludeMe:[[(Technology.)Tools]]%0a%3c Categories:[[!Links]]%0a%3c Tags: tools, deployment, server administration, devops%0a%3c (:tags-hide tools, deployment, server administration, devops :)%0a%3c >>%3c%3c%0a%3c %0a%3c [[#excerpt]]%0a%3c If you have an application that has several moving parts, authentication credentials, and uses various services and daemons on the target environment, and possibly several target environments (i.e. production, staging, testing, etc), [[Chef -> http://www.opscode.com/chef/]] is a tool that can help tremendously. %0a%3c [[#excerptend]]%0a%3c %0a%3c >>quote%3c%3c%0a%3c !! Reality-Based automation for the Cloud.%0a%3c %0a%3c Chef is an open-source systems integration framework built specifically for automating the cloud. No matter how complex the realities of your business, Chef makes it easy to deploy servers and scale applications throughout your entire infrastructure. Because it combines the fundamental elements of configuration management and service oriented architectures with the full power of Ruby, Chef makes it easy to create an elegant, fully automated infrastructure.%0a%3c >>%3c%3c%0a%3c %0a%3c !! Quick hits%0a%3c %0a%3c !!! Changing an environment with knife:%0a%3c %0a%3c (:source lang=bash:)%0a%3c $ knife environment from file environments/$ENVIRONMENT.rb %0a%3c (:sourceend:)%0a%3c %0a%3c !!! Uploading a new cookbook with knife:%0a%3c %0a%3c (:source lang=bash:)%0a%3c $ knife cookbook upload $COOKBOOKNAME%0a%3c (:sourceend:)%0a%3c %0a%3c !! Making an update to a cookbook, but only using it in some environments%0a%3c %0a%3c Each cookbook has a [@metadata.rb@] file that contains the revision of the cookbook:%0a%3c %0a%3c (:source lang=ruby header="metadata.rb file for the myapp cookbook":)%0a%3c maintainer "tamouse"%0a%3c maintainer_email "tamouse@gmail.com"%0a%3c license "MIT"%0a%3c description "Installs/Configures MyApp"%0a%3c long_description IO.read(File.join(File.dirname(__FILE__), 'README.md'))%0a%3c version "0.2.6" # %3c---- this is where you manage the version number%0a%3c depends "unicorn"%0a%3c depends "application"%0a%3c depends "application_ruby"%0a%3c depends "nodejs"%0a%3c depends "mysql"%0a%3c depends "rbenv"%0a%3c depends "database"%0a%3c depends "logrotate"%0a%3c (:sourceend:)%0a%3c %0a%3c the [@version@] line is set to the latest version of a cookbook. Hosted Chef keeps track of versions of cookbooks, so environments can choose which one they want to use. In the environment file, you specify the set of cookbooks to include using the "cookbooks" JSON object:%0a%3c %0a%3c (:source lang=ruby header="Partial contents of an environment file in chef":)%0a%3c cookbook_versions({%0a%3c                       "apache2" => "= 1.1.10",%0a%3c                       "application" => "= 1.0.1",%0a%3c                       "application_java" => "= 1.0.0",%0a%3c                       "application_ruby" => "= 1.0.8",%0a%3c                       "apt" => "= 1.4.2",%0a%3c                       "aws" => "= 0.100.0",%0a%3c                       "bind9" => "= 0.1.3",%0a%3c                       "bluepill" => "= 1.0.4",%0a%3c                       "build-essential" => "= 1.0.2",%0a%3c                       "chef-client" => "= 1.1.3",%0a%3c                       "chef_handler" => "= 1.0.6",%0a%3c                       "database" => "= 1.2.0",%0a%3c                       "dmg" => "= 1.0.0",%0a%3c                       "erlang" => "= 1.0.0",%0a%3c                       "git" => "= 1.0.0",%0a%3c                       "gpg" => "= 0.0.1",%0a%3c                       "gunicorn" => "= 1.0.0",%0a%3c                       "haproxy" => "= 1.0.5",%0a%3c                       "iptables" => "= 0.10.0",%0a%3c                       "java" => "= 1.5.0",%0a%3c                       "jetty" => "= 0.0.1",%0a%3c                       "jpackage" => "= 0.10.0",%0a%3c                       "keepalived" => "= 0.8.2",%0a%3c                       "logrotate" => "= 0.8.2",%0a%3c                       "memcached" => "= 1.0.3",%0a%3c                       "myapp" => "= 0.2.6", # %3c--- this is where you say which version of the myapp cookbook to use%0a%3c                       "mysql" => "= 1.2.6",%0a%3c                       "newrelic" => "= 0.2.6",%0a%3c                       "nginx" => "= 0.101.6",%0a%3c                       "nodejs" => "= 1.0.1",%0a%3c                       "ohai" => "= 1.0.2",%0a%3c                       "openssl" => "= 1.0.0",%0a%3c                       "passenger_apache2" => "= 0.99.4",%0a%3c                       "php" => "= 1.0.2",%0a%3c                       "postfix" => "= 1.2.0",%0a%3c                       "postgresql" => "= 0.99.4",%0a%3c                       "python" => "= 1.0.6",%0a%3c                       "rabbitmq" => "= 1.4.2",%0a%3c                       "rbenv" => "= 1.4.0",%0a%3c                       "rubygems" => "= 0.2.0",%0a%3c                       "runit" => "= 0.15.0",%0a%3c                       "rvm" => "= 0.9.1",%0a%3c                       "scout-agent" => "= 1.0.0",%0a%3c                       "solr-jetty" => "= 0.0.1",%0a%3c                       "solr-tomcat" => "= 0.0.3",%0a%3c                       "sudo" => "= 1.1.0",%0a%3c                       "tomcat" => "= 0.10.4",%0a%3c                       "unicorn" => "= 1.0.4",%0a%3c                       "users" => "= 1.1.2",%0a%3c                       "windows" => "= 1.3.0",%0a%3c                       "wordpress" => "= 0.8.8",%0a%3c                       "xfs" => "= 1.0.0",%0a%3c                       "xml" => "= 1.0.4",%0a%3c                       "yum" => "= 0.6.0",%0a%3c                       "common" => "= 0.0.2"%0a%3c %0a%3c                   })%0a%3c (:sourceend:)%0a%3c %0a%3c If you have multiple environments, then you can rev the myapp cookbook, and specify the version string for only those environments that need the new aspects of the cookbook, and leave the others alone. For example, you may have a handful of testing environments for various reasons, and you can have a testing envrionment that is the only one that gets the new version bump for you app until it's tested adequately. As the features of your app are promoted from development to testing to staging to production, you can modify each of the corresponding environment files as necessary.%0a
host:1356729753=75.144.38.217
