version=pmwiki-2.2.43 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:18.0) Gecko/20100101 Firefox/18.0
author=tamara
charset=ISO-8859-1
csum=
ctime=1360445501
host=71.63.215.130
name=Technology.PmWikiFarms
rev=3
targets=Technology.PmWikiFarms,Technology.Lighttpd,Technology.Nginx,Technology.PmWiki,Technology.IncludeMe,Category.HowTos,Category.Articles
text=[[#excerpt]]%0aI've been implementing wiki farms with pmwiki for some time now. At first I was confused by the original documentation that seemed to me that all the farms had to reside under the same domain. This is '''not''' true, however. After chasing after the alternative to farming described in [[Cookbook:WikiFarmAlternative]], I came back the standard method explained in [[PmWiki:WikiFarms]] and allied pages. (See [[#links|Links]] below.)%0a%0aAfter reading through the estimable [[Cookbook:FarmSetupByExample]] (''really'' recommend reading through this!), I wanted to go back to the notion of implementing a (more) secure version of the field in a farm. (I've written a comment at [[Cookbook:FarmSetupByExample-Talk]] with a summary. This is a more detailed explanation.)%0a[[#excerptend]]%0a%0a!! Why would you want to do this?%0a%0aThe basic configuration that pmwiki comes with enables farms almost out-of-the-box, with some pretty easy configuration as shown in [[Cookbook:FarmSetupByExample|FarmSetupByExample]].%0a%0aPmwiki also provides an @@.htaccess@@ file for each directory that should not be explorable by browser, the method employed under Apache servers (although the Apache mavens feel this is not desirable as it causes performance issues in the server).%0a%0aTwo desires confluence on a more viable solution:%0a%0a# desire to run pmwiki under either [[(Technology.)Lighttpd]] or [[(Technology.)Nginx]], neither of which grok Apache's @@.htaccess@@ files, and require their own method of blocking access to regions and subdirectories under the document root. (Too complex for discussion here.)%0a%0a# desire to ensure that browsers cannot access wiki data directly.%0a%0a>>important%3c%3c%0aHonestly, if you have no real strong need to do this, don't bother.%0aThe .htaccess file method works fine with Apache, albeit at some%0acost of performance. The steps here will always be complicated%0aand they involve some knowledge of the internals of pmwiki as well%0aas unix file systems.%0a>>%3c%3c%0a%0a!! Have a farm wiki set up%0a%0aI installed my farm in a non-accessible place as well, to keep it from ever being invoked. It resides in @@/var/www/newfarm/pmwiki-latest@@ which is symlinked to whatever the latest pmwiki version is installed.%0a%0aThe only concern is are the cookbook, local, and pub directories that pmwiki will need for it's farming. What I've had to do is for each new version of pmwiki I download, and re-symlink to pmwiki-latest, is remove the cookbook, local, and pub directories from the pmwiki-latest directory, and symlink them to where the actual directories reside.%0a%0aI keep these in the newfarm directory itself.%0a%0aThe procedure looks like so:%0a%0a(:source lang=bash linenum:)%0a$ cd /var/www/newfarm%0a$ curl http://www.pmwiki.org/pub/pmwiki/pmwiki-latest.zip%0a$ unzip pmwiki-latest.zip%0a$ rm pmwiki-latest%0a$ ln -s pmwiki-2.2.xx pmwiki-latest # whatever the zip file unpacked to%0a$ rm -rf pmwiki-latest/cookbook pmwiki-latest/local pmwiki-latest/pub%0a$ ln -s cookbook pmwiki-latest/cookbook%0a$ ln -s local pmwiki-latest/local%0a$ ln -s pub pmwiki-latest/pub%0a(:sourceend:)%0a%0aThis is what the newfarm directory looks like after a new pmwiki version is installed:%0a%0a(:source lang=text:)%0adrwxr-sr-x 2 tamara   tamara   4096 Dec  2 14:09 cookbook%0adrwxr-sr-x 2 tamara   tamara   4096 Feb  9 13:44 local%0adrwxr-sr-x 8 tamara   tamara   4096 Dec 17 23:00 pmwiki-2.2.43%0adrwxr-sr-x 8 tamara   tamara   4096 Dec  2 14:09 pmwiki-2.2.45%0adrwxr-sr-x 5 tamara   tamara   4096 Feb  9 13:43 pmwiki-2.2.46%0alrwxrwxrwx 1 tamara   tamara     13 Feb  9 12:53 pmwiki-latest -> pmwiki-2.2.46%0a-rw-rw-r-- 1 tamara   tamara 521934 Feb  9 12:52 pmwiki-latest.zip%0adrwxr-sr-x 5 tamara   tamara   4096 Dec  2 14:09 pub%0a(:sourceend:)%0a%0aThis is what the newfarm/pmwiki-latest directory looks like:%0a%0a(:source lang=text:)%0alrwxrwxrwx 1 tamara tamara    25 Feb  9 13:43 cookbook -> /var/www/newfarm/cookbook%0adrwxr-sr-x 2 tamara tamara  4096 Jan  7 07:26 docs%0alrwxrwxrwx 1 tamara tamara    22 Feb  9 13:43 local -> /var/www/newfarm/local%0a-rwxr-xr-x 1 tamara tamara 86008 Jan  7 06:34 pmwiki.php%0alrwxrwxrwx 1 tamara tamara    20 Feb  9 13:43 pub -> /var/www/newfarm/pub%0a-rw-r--r-- 1 tamara tamara  1992 Jun  2  2006 README.txt%0adrwxr-sr-x 2 tamara tamara  4096 Jan  7 07:26 scripts%0adrwxr-sr-x 2 tamara tamara  4096 Jan  7 07:26 wikilib.d%0a(:sourceend:)%0a%0aThe @@farmconfig.php@@ file resides in @@/var/www/newfarm/local@@:%0a%0a(:source lang=php linenum:)%0a%3c?php if(!defined('PmWiki')) exit("Must be run inside PmWiki");%0a$FarmPubDirUrl = '/pub/';%0a(:sourceend:)%0a%0aAnd that @@pub@@ directory is made server-accessible via another symlink:%0a%0a(:source lang=text:)%0alrwxrwxrwx 1 tamara tamara 20 Feb  9 12:54 /var/www/htdocs/pub -> /var/www/newfarm/pub%0a(:sourceend:)%0a%0aOkay, we are go for farming!%0a%0a!! Two areas needed: Server-Accessible and Server-Inaccessible%0a%0aIn my testing, I made two directories:%0a# @@~/public_html/testfield/@@%0a# @@~/testfield.data/@@%0a%0a!!! Directory 1%0a%0a@@testfield@@, is the document root for the wiki field and contains:%0a(:source lang=text:)%0a+-- testfield/%0a|--    inddex.php%0a`--    local/%0a   |--   config.php%0a`--    pub/%0a(:sourceend:)%0a%0a!!! Directory 2%0a%0a@@testfield.data@@, is the area where the wiki's information will actually be stored, and needs the following directories:%0a%0a(:source lang=text:)%0a+-- testfield.data/%0a`-- local/%0a   |-- config.php%0a`-- wiki.d/%0a`-- wikilib.d/%0a`-- workdir/%0a(:sourceend:)%0a%0aSetting permissions so the server can write to the @@wiki.d@@, @@wikilib.d@@, and @@workdir@@ are crucial. I set the permission to 775, and set the owner to the user the server is running at (e.g., www-data under the default Ubuntu Apache install). At the end, the @@testfield.data@@ directory looks like:%0a%0a(:source lang=text:)%0adrwxrwsr-x 2 tamara   tamara 4096 Feb  9 11:47 local%0adrwxrwsr-x 2 www-data tamara 4096 Feb  9 14:16 wiki.d%0adrwxrwsr-x 2 www-data tamara 4096 Feb  9 10:38 wikilib.d%0adrwxrwsr-x 2 www-data tamara 4096 Feb  9 14:16 workdir%0a(:sourceend:)%0a%0aIf you want to make them safer even on the server, you can set permissions to 770, but make sure that www-data (or equivalent) has read/execute permission to the local directory as well.%0a%0a>>nutshell%3c%3c%0aUnder lightttpd or nginx, this permission stuff becomes an non-issue,%0aas php-fpm runs under the file owner's permissions.%0a>>%3c%3c%0a%0a%0a%0a!! Now comes the magic!!%0a%0aThe whole thing rides on resetting a few standard pmwiki variables:%0a%0a* [[PmWiki:PathVariables#WikiDir|$WikiDir]] -- sets the page store for this wikifield (aka, @@wiki.d@@)%0a* [[PmWiki:PathVariables#WikiLibDirs|$WikiLibDirs]] -- sets the array of page stores in which to find wiki pages%0a* [[PmWiki:PathVariables#WorkDir|$WorkDir]] -- sets the working directory for the field.%0a%0aHere's the field's local config file: @@testfield/local/config.php@@ with the appropriate settings:%0a%0a(:source lang=php linenum:)%0a%3c?php if (!defined('PmWiki')) exit();%0a// field config.php -- This is the file that goes in the field's local directory.%0a// It sets up the storage to look at another directory outside of the docroot%0a// See http://www.tamaratemple.com/Technology/PmWikiFarms for more info.%0a$FieldD = "/path/to/testfield.data";%0a$WikiDir = new PageStore("$FieldD/wiki.d/{\$FullName}");%0a$WorkDir = "$FieldD/workdir/";%0a$WikiLibDir = array(&$WikiDir,%0a		    new PageStore("$FieldD/wikilib2.d/{\$FullName}"),%0a		    new PageStore("$FarmD/wikilib.d/{\$FullName}"));%0ainclude_once("$FieldD/local/config.php");%0a(:sourceend:)%0a%0aThe last line makes it so the remainder of the field's configuration is kept out of the docroot as well. Just to show, @@testfield.data/local/config.php@@ contains:%0a%0a(:source lang=php linenum:)%0a%3c?php if (!defined('PmWiki')) exit();%0a##  This is a sample config.php file.  To use this file, copy it to%0a##  local/config.php, then edit it for whatever customizations you want.%0a##  Also, be sure to take a look at http://www.pmwiki.org/wiki/Cookbook%0a##  for more details on the types of customizations that can be added%0a##  to PmWiki.%0a%0a##  $WikiTitle is the name that appears in the browser's title bar.%0a$WikiTitle = 'TestWikiField';%0a%0a## ... and so on ...%0a(:sourceend:)%0a%0a%0a%0a[[#links]]%0a!! Links%0a%0aGreat links on pmwiki.org for learning about wiki farming:%0a* [[PmWiki:WikiFarms]] -- the starting point.%0a* [[PmWiki:WikiFarmsTerminology]] -- some of the terms are not used consistently throughout the documentation; this page should help.%0a* [[PmWiki:WikiFarmsAdvanced]]%0a* [[Cookbook:FarmSetupByExample]] -- great tutorial walks you through the setup steps.%0a* [[Cookbook:WikiFarmAlternative]] -- a rather complex setup to keep your wiki pages, configurations, and so on outside the wiki field's root folder (and thus inaccessible to browsers).%0a** '''N.B.:''' This was the path I started down, and abandoned, even after redoing it somewhat to fit my own tastes. Pm has provided a fantastic way of doing farms without resorting to such shenannigans.%0a%0a%0a>>comment%3c%3c%0aSummary:Implementing a (more) secure Wiki farm using PmWiki%0aParent:(Technology.)PmWiki%0aIncludeMe:[[(Technology.)PmWiki]]%0aCategories:[[!HowTos]], [[!Articles]]%0aTags: pmwiki, wiki, wikifarms, pmwikifarms, howtos%0a(:tags-hide pmwiki, wiki, wikifarms, pmwikifarms, howtos :)%0a>>%3c%3c%0a
time=1360446047
author:1360446047=tamara
diff:1360446047:1360445800:=21c21%0a%3c The .htaccess file method works fine with Apache, albeit at some%0a---%0a> The .htaccess file method works find with Apache, albeit at some%0a131c131%0a%3c >>nutshell%3c%3c%0a---%0a> >>important%3c%3c%0a143c143%0a%3c * [[PmWiki:PathVariables#WikiLibDirs|$WikiLibDirs]] -- sets the array of page stores in which to find wiki pages%0a---%0a> * [[PmWiki:PathVariables#WikiLibDirs#$WikiLibDirs]] -- sets the array of page stores in which to find wiki pages%0a
host:1360446047=71.63.215.130
author:1360445800=tamara
diff:1360445800:1360445501:=18,25d17%0a%3c %0a%3c >>important%3c%3c%0a%3c Honestly, if you have no real strong need to do this, don't bother.%0a%3c The .htaccess file method works find with Apache, albeit at some%0a%3c cost of performance. The steps here will always be complicated%0a%3c and they involve some knowledge of the internals of pmwiki as well%0a%3c as unix file systems.%0a%3c >>%3c%3c%0a
host:1360445800=71.63.215.130
author:1360445501=tamara
diff:1360445501:1360445501:=1,191d0%0a%3c [[#excerpt]]%0a%3c I've been implementing wiki farms with pmwiki for some time now. At first I was confused by the original documentation that seemed to me that all the farms had to reside under the same domain. This is '''not''' true, however. After chasing after the alternative to farming described in [[Cookbook:WikiFarmAlternative]], I came back the standard method explained in [[PmWiki:WikiFarms]] and allied pages. (See [[#links|Links]] below.)%0a%3c %0a%3c After reading through the estimable [[Cookbook:FarmSetupByExample]] (''really'' recommend reading through this!), I wanted to go back to the notion of implementing a (more) secure version of the field in a farm. (I've written a comment at [[Cookbook:FarmSetupByExample-Talk]] with a summary. This is a more detailed explanation.)%0a%3c [[#excerptend]]%0a%3c %0a%3c !! Why would you want to do this?%0a%3c %0a%3c The basic configuration that pmwiki comes with enables farms almost out-of-the-box, with some pretty easy configuration as shown in [[Cookbook:FarmSetupByExample|FarmSetupByExample]].%0a%3c %0a%3c Pmwiki also provides an @@.htaccess@@ file for each directory that should not be explorable by browser, the method employed under Apache servers (although the Apache mavens feel this is not desirable as it causes performance issues in the server).%0a%3c %0a%3c Two desires confluence on a more viable solution:%0a%3c %0a%3c # desire to run pmwiki under either [[(Technology.)Lighttpd]] or [[(Technology.)Nginx]], neither of which grok Apache's @@.htaccess@@ files, and require their own method of blocking access to regions and subdirectories under the document root. (Too complex for discussion here.)%0a%3c %0a%3c # desire to ensure that browsers cannot access wiki data directly.%0a%3c %0a%3c !! Have a farm wiki set up%0a%3c %0a%3c I installed my farm in a non-accessible place as well, to keep it from ever being invoked. It resides in @@/var/www/newfarm/pmwiki-latest@@ which is symlinked to whatever the latest pmwiki version is installed.%0a%3c %0a%3c The only concern is are the cookbook, local, and pub directories that pmwiki will need for it's farming. What I've had to do is for each new version of pmwiki I download, and re-symlink to pmwiki-latest, is remove the cookbook, local, and pub directories from the pmwiki-latest directory, and symlink them to where the actual directories reside.%0a%3c %0a%3c I keep these in the newfarm directory itself.%0a%3c %0a%3c The procedure looks like so:%0a%3c %0a%3c (:source lang=bash linenum:)%0a%3c $ cd /var/www/newfarm%0a%3c $ curl http://www.pmwiki.org/pub/pmwiki/pmwiki-latest.zip%0a%3c $ unzip pmwiki-latest.zip%0a%3c $ rm pmwiki-latest%0a%3c $ ln -s pmwiki-2.2.xx pmwiki-latest # whatever the zip file unpacked to%0a%3c $ rm -rf pmwiki-latest/cookbook pmwiki-latest/local pmwiki-latest/pub%0a%3c $ ln -s cookbook pmwiki-latest/cookbook%0a%3c $ ln -s local pmwiki-latest/local%0a%3c $ ln -s pub pmwiki-latest/pub%0a%3c (:sourceend:)%0a%3c %0a%3c This is what the newfarm directory looks like after a new pmwiki version is installed:%0a%3c %0a%3c (:source lang=text:)%0a%3c drwxr-sr-x 2 tamara   tamara   4096 Dec  2 14:09 cookbook%0a%3c drwxr-sr-x 2 tamara   tamara   4096 Feb  9 13:44 local%0a%3c drwxr-sr-x 8 tamara   tamara   4096 Dec 17 23:00 pmwiki-2.2.43%0a%3c drwxr-sr-x 8 tamara   tamara   4096 Dec  2 14:09 pmwiki-2.2.45%0a%3c drwxr-sr-x 5 tamara   tamara   4096 Feb  9 13:43 pmwiki-2.2.46%0a%3c lrwxrwxrwx 1 tamara   tamara     13 Feb  9 12:53 pmwiki-latest -> pmwiki-2.2.46%0a%3c -rw-rw-r-- 1 tamara   tamara 521934 Feb  9 12:52 pmwiki-latest.zip%0a%3c drwxr-sr-x 5 tamara   tamara   4096 Dec  2 14:09 pub%0a%3c (:sourceend:)%0a%3c %0a%3c This is what the newfarm/pmwiki-latest directory looks like:%0a%3c %0a%3c (:source lang=text:)%0a%3c lrwxrwxrwx 1 tamara tamara    25 Feb  9 13:43 cookbook -> /var/www/newfarm/cookbook%0a%3c drwxr-sr-x 2 tamara tamara  4096 Jan  7 07:26 docs%0a%3c lrwxrwxrwx 1 tamara tamara    22 Feb  9 13:43 local -> /var/www/newfarm/local%0a%3c -rwxr-xr-x 1 tamara tamara 86008 Jan  7 06:34 pmwiki.php%0a%3c lrwxrwxrwx 1 tamara tamara    20 Feb  9 13:43 pub -> /var/www/newfarm/pub%0a%3c -rw-r--r-- 1 tamara tamara  1992 Jun  2  2006 README.txt%0a%3c drwxr-sr-x 2 tamara tamara  4096 Jan  7 07:26 scripts%0a%3c drwxr-sr-x 2 tamara tamara  4096 Jan  7 07:26 wikilib.d%0a%3c (:sourceend:)%0a%3c %0a%3c The @@farmconfig.php@@ file resides in @@/var/www/newfarm/local@@:%0a%3c %0a%3c (:source lang=php linenum:)%0a%3c %3c?php if(!defined('PmWiki')) exit("Must be run inside PmWiki");%0a%3c $FarmPubDirUrl = '/pub/';%0a%3c (:sourceend:)%0a%3c %0a%3c And that @@pub@@ directory is made server-accessible via another symlink:%0a%3c %0a%3c (:source lang=text:)%0a%3c lrwxrwxrwx 1 tamara tamara 20 Feb  9 12:54 /var/www/htdocs/pub -> /var/www/newfarm/pub%0a%3c (:sourceend:)%0a%3c %0a%3c Okay, we are go for farming!%0a%3c %0a%3c !! Two areas needed: Server-Accessible and Server-Inaccessible%0a%3c %0a%3c In my testing, I made two directories:%0a%3c # @@~/public_html/testfield/@@%0a%3c # @@~/testfield.data/@@%0a%3c %0a%3c !!! Directory 1%0a%3c %0a%3c @@testfield@@, is the document root for the wiki field and contains:%0a%3c (:source lang=text:)%0a%3c +-- testfield/%0a%3c |--    inddex.php%0a%3c `--    local/%0a%3c    |--   config.php%0a%3c `--    pub/%0a%3c (:sourceend:)%0a%3c %0a%3c !!! Directory 2%0a%3c %0a%3c @@testfield.data@@, is the area where the wiki's information will actually be stored, and needs the following directories:%0a%3c %0a%3c (:source lang=text:)%0a%3c +-- testfield.data/%0a%3c `-- local/%0a%3c    |-- config.php%0a%3c `-- wiki.d/%0a%3c `-- wikilib.d/%0a%3c `-- workdir/%0a%3c (:sourceend:)%0a%3c %0a%3c Setting permissions so the server can write to the @@wiki.d@@, @@wikilib.d@@, and @@workdir@@ are crucial. I set the permission to 775, and set the owner to the user the server is running at (e.g., www-data under the default Ubuntu Apache install). At the end, the @@testfield.data@@ directory looks like:%0a%3c %0a%3c (:source lang=text:)%0a%3c drwxrwsr-x 2 tamara   tamara 4096 Feb  9 11:47 local%0a%3c drwxrwsr-x 2 www-data tamara 4096 Feb  9 14:16 wiki.d%0a%3c drwxrwsr-x 2 www-data tamara 4096 Feb  9 10:38 wikilib.d%0a%3c drwxrwsr-x 2 www-data tamara 4096 Feb  9 14:16 workdir%0a%3c (:sourceend:)%0a%3c %0a%3c If you want to make them safer even on the server, you can set permissions to 770, but make sure that www-data (or equivalent) has read/execute permission to the local directory as well.%0a%3c %0a%3c >>important%3c%3c%0a%3c Under lightttpd or nginx, this permission stuff becomes an non-issue,%0a%3c as php-fpm runs under the file owner's permissions.%0a%3c >>%3c%3c%0a%3c %0a%3c %0a%3c %0a%3c !! Now comes the magic!!%0a%3c %0a%3c The whole thing rides on resetting a few standard pmwiki variables:%0a%3c %0a%3c * [[PmWiki:PathVariables#WikiDir|$WikiDir]] -- sets the page store for this wikifield (aka, @@wiki.d@@)%0a%3c * [[PmWiki:PathVariables#WikiLibDirs#$WikiLibDirs]] -- sets the array of page stores in which to find wiki pages%0a%3c * [[PmWiki:PathVariables#WorkDir|$WorkDir]] -- sets the working directory for the field.%0a%3c %0a%3c Here's the field's local config file: @@testfield/local/config.php@@ with the appropriate settings:%0a%3c %0a%3c (:source lang=php linenum:)%0a%3c %3c?php if (!defined('PmWiki')) exit();%0a%3c // field config.php -- This is the file that goes in the field's local directory.%0a%3c // It sets up the storage to look at another directory outside of the docroot%0a%3c // See http://www.tamaratemple.com/Technology/PmWikiFarms for more info.%0a%3c $FieldD = "/path/to/testfield.data";%0a%3c $WikiDir = new PageStore("$FieldD/wiki.d/{\$FullName}");%0a%3c $WorkDir = "$FieldD/workdir/";%0a%3c $WikiLibDir = array(&$WikiDir,%0a%3c 		    new PageStore("$FieldD/wikilib2.d/{\$FullName}"),%0a%3c 		    new PageStore("$FarmD/wikilib.d/{\$FullName}"));%0a%3c include_once("$FieldD/local/config.php");%0a%3c (:sourceend:)%0a%3c %0a%3c The last line makes it so the remainder of the field's configuration is kept out of the docroot as well. Just to show, @@testfield.data/local/config.php@@ contains:%0a%3c %0a%3c (:source lang=php linenum:)%0a%3c %3c?php if (!defined('PmWiki')) exit();%0a%3c ##  This is a sample config.php file.  To use this file, copy it to%0a%3c ##  local/config.php, then edit it for whatever customizations you want.%0a%3c ##  Also, be sure to take a look at http://www.pmwiki.org/wiki/Cookbook%0a%3c ##  for more details on the types of customizations that can be added%0a%3c ##  to PmWiki.%0a%3c %0a%3c ##  $WikiTitle is the name that appears in the browser's title bar.%0a%3c $WikiTitle = 'TestWikiField';%0a%3c %0a%3c ## ... and so on ...%0a%3c (:sourceend:)%0a%3c %0a%3c %0a%3c %0a%3c [[#links]]%0a%3c !! Links%0a%3c %0a%3c Great links on pmwiki.org for learning about wiki farming:%0a%3c * [[PmWiki:WikiFarms]] -- the starting point.%0a%3c * [[PmWiki:WikiFarmsTerminology]] -- some of the terms are not used consistently throughout the documentation; this page should help.%0a%3c * [[PmWiki:WikiFarmsAdvanced]]%0a%3c * [[Cookbook:FarmSetupByExample]] -- great tutorial walks you through the setup steps.%0a%3c * [[Cookbook:WikiFarmAlternative]] -- a rather complex setup to keep your wiki pages, configurations, and so on outside the wiki field's root folder (and thus inaccessible to browsers).%0a%3c ** '''N.B.:''' This was the path I started down, and abandoned, even after redoing it somewhat to fit my own tastes. Pm has provided a fantastic way of doing farms without resorting to such shenannigans.%0a%3c %0a%3c %0a%3c >>comment%3c%3c%0a%3c Summary:Implementing a (more) secure Wiki farm using PmWiki%0a%3c Parent:(Technology.)PmWiki%0a%3c IncludeMe:[[(Technology.)PmWiki]]%0a%3c Categories:[[!HowTos]], [[!Articles]]%0a%3c Tags: pmwiki, wiki, wikifarms, pmwikifarms, howtos%0a%3c (:tags-hide pmwiki, wiki, wikifarms, pmwikifarms, howtos :)%0a%3c >>%3c%3c%0a
host:1360445501=71.63.215.130
