>>comment<<
Summary:A slick ruby gem that builds a command line application
Parent:(Technology.)Ruby
IncludeMe:[[(Technology.)Ruby]]
Categories:[[!Links]], [[!Articles]]
Tags: ruby, gems, cli, scripts, miniapplications
(:tags-hide ruby, gems, cli, scripts, miniapplications :)
>><<

[[#excerpt]]
[[Methadone -> http://davetron1000.github.com]] is a pretty neat little gem that gets a command line application up and tested with some cool features.
[[#excerptend]]


!! Logging in colours

[@Methadone::CLILogging@] has the ability to substitute a different formatter when you log messages. I did this little ditty, just to see how it works:

(:source lang=ruby:)
require 'formatador'
(:sourceend:)

(Don't forget to add formatador to your @@Gemfile@@ or @@.gemspec@@.)


(:source lang=ruby linenum header="After the requires, before the App is declared:":)
SEVERITY_COLORS = {
  'DEBUG' => 'green',
  'INFO' => 'white',
  'WARN' => 'yellow',
  'ERROR' => 'cyan',
  'FATAL' => 'red'
}
(:sourceend:)

(:source lang=ruby linenum header="After the includes inside the class App:":)
class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::SH

  # After including Methadone::CLILogging, the logger
  # can be modified, notably replacing the formatter
  # code with an anonymous procedure:
  logger.formatter = proc { |severity,datetime,progname,msg|
    c = SEVERITY_COLORS[severity]
    Formatador.parse("[#{c}]#{msg}[/]\n")
  }

  main do | config | # ... and so on
(:sourceend:)

And then when you give:

(:source lang=ruby:)
debug("This is a debug statement")
info("FYI")
warn("This is a warning")
error("Oops!! Something went wrong, cleaning up")
fatal("OH NOES!! Cannot procede, dropping the platter")
(:sourceend:)

will produce:

(:div style="background-color: #333; colour: #CCC; font-family: monospace; border: 1pt solid #CCC; padding: 10px;":)
(:linebreaks:)


%green%This is a debug statement%%
%white%FYI%%
%yellow%This is a warning%%
%color="#63F3F6"%Oops!! Something went wrong, cleaning up%%
%red%OH NOES!! Cannot procede, dropping the platter%


(:nolinebreaks:)
(:divend:)

