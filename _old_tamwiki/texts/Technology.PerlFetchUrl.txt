[[#excerpt]]
Fetching a page from the web is something which is done very often in my scripts. The following small function makes use of LWP::`UserAgent to retrieve and return the HTTP::Response object from the call.
[[#excerptend]]

(:source lang=perl linenum header="fetchURL function" highlight='4':)
sub fetchUrl {
    my $url = shift;
    my $ua = LWP::UserAgent->new(
	agent => "Mozilla/5.0",
	timeout => 30,
	);
    my $response = $ua->get($url);
    unless ($response->is_success) {
	warn "fetchUrl: $url" . ' returned ' . $response->status_line;
	return undef;
    }
    return $response;
}
(:sourceend:)

Note at line 4, setting the value of the agent option. This is due to the practice of many websites not processing an unrecognized user agent string, or one which is quite obviously a script. This encapsulates the functionality inherent in LWP::UserAgent.

This should properly be done as an extended class of LWP::UserAgent, but it is so straight-forward as procedural code.

>>comment<<
Summary:A compact function to return an HTML page encapsulated in an HTTP::Response object
Parent:(Technology.)Perl
IncludeMe:[[Technology.Perl]]
Categories:[[!HowTos]]
Tags: perl, howtos, examples, web development
(:tags-hide perl, howtos, examples, web development :)
>><<




