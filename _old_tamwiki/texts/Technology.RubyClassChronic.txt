[[#excerpt]]
[[Chronic -> http://chronic.rubyforge.org]] is a [[Ruby]] gem that can parse a huge variety of date and time formats. 
[[#excerptend]]

!! Synopsis

Taken from [[README -> http://chronic.rubyforge.org/files/README.html]] file:

(:source lang=bash header="Installing Chronic":)
$ sudo gem install chronic
(:sourceend:)

(:source lang=ruby linenum tabwidth=4 header="Using Chronic":)
require 'chronic'

Time.now
 # => 2012-11-08 12:06:49 -0600 

Chronic.parse("tomorrow")
  # => 2012-11-09 12:00:00 -0600 

Chronic.parse("monday", :context => :past)
  # => 2012-11-05 12:00:00 -0600 
(:sourceend:)

''Note: This module might make a ''great'' improvement over the [[remind -> Technology.Remind]] tool's syntax.''

!! Some gotchas

Chronic is good, but sometimes it's a little.. errmmm "chronic".

''(Note: these are run with [@Chronic.debug=true@])''	


!!! Next Hour On the Hour

Just giving "next hour" always seems to give half past the next hour mark:

(:source lang=ruby:)
Chronic.parse "next hour"
# +---------------------------------------------------
# | [next(grabber-next) , hour(repeater-hour) ]
# +---------------------------------------------------
# -anchor
# Handler: handle_r
# Handler-class: Chronic::RepeaterHour
# --(2013-06-06 13:00:00 -0500..2013-06-06 14:00:00 -0500)
#--(2013-06-06 13:00:00 -0500..2013-06-06 14:00:00 -0500)
# => 2013-06-06 13:30:00 -0500 
(:sourceend:)

Okay, this doesn't actually work:

(:source lang=ruby:)
Chronic.parse "next hour on the hour"
# +---------------------------------------------------
# | [next(grabber-next) , hour(repeater-hour) , on(separator-on) , hour(repeater-hour) ]
# +---------------------------------------------------
# -none
# => nil 
(:sourceend:)

Nor does this:

(:source lang=ruby:)
Chronic.parse "next hour at 0 minutes"
# +---------------------------------------------------
# | [next(grabber-next) , hour(repeater-hour) , at(separator-at) , 0(repeater-time-0?, scalar, scalar-year-2000) , minutes(repeater-minute) ]
# +---------------------------------------------------
# -anchor
# Handler: handle_r
# Handler-class: Chronic::RepeaterDayPortion
# --(2013-06-07 06:00:00 -0500..2013-06-07 18:00:00 -0500)
# --(2013-06-07 06:00:00 -0500..2013-06-07 18:00:00 -0500)
# --(2013-06-07 06:00:00 -0500..2013-06-07 07:00:00 -0500)
# --(2013-06-07 06:00:00 -0500..2013-06-07 06:01:00 -0500)
#  => nil 
(:sourceend:)

!!!! Solution?

I came up with this fugly thing:

(:source lang=ruby:)
Chronic.parse("next hour", guess: false).first
# +---------------------------------------------------
# | [next(grabber-next) , hour(repeater-hour) ]
# +---------------------------------------------------
# -anchor
# Handler: handle_r
# Handler-class: Chronic::RepeaterHour
# --(2013-06-06 13:00:00 -0500..2013-06-06 14:00:00 -0500)
# --(2013-06-06 13:00:00 -0500..2013-06-06 14:00:00 -0500)
#  => 2013-06-06 13:00:00 -0500 
(:sourceend:)




>>comment<<
Summary:Chronic is a Ruby class that allows you to find timestamps based on natural (human) language"
Parent:(Technology.)Ruby
IncludeMe:[[(Technology.)Ruby]]
Categories:[[!Articles]],[[!HowTos]]
Tags: ruby, date parsing, gems
(:tags-hide ruby, date parsing, gems :)
>><<
