[[#excerpt]]
Sometimes, you need to know the application root of your PHP application. There are a few ways to do that. I'll outline the simplest first.
[[#excerptend]]

!!Setting the APP_ROOT constant from the file name

!!!Method One: Using dirname(__FILE__)

If you set the application root from a file in the root directory, or a known depth from the root, you can simply use the dirname() function with the [[PHPMagicConstants|PHP Magic Constant]] __FILE__:

(:source lang=php:)
define('APP_ROOT', dirname(__FILE__).DIRECTORY_SEPARATOR);
(:sourcend:)

For files below the application's root, simply stack on another dirname (or as many as are needed):

(:source lang=php:)
define('APP_ROOT',dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR);
(:sourceend:)

This has major advantages of being portable and usable in both the server and cli environments.

One disadvantage is that you have to ''a priori'' know the hierarchy of the application already. If you are using the SingleApplicationEntryPoint structure, this is very easy as you can set it in the main file.

!!!Method Two: Using a named path and examining the file paths returned by $_SERVER['SCRIPT_FILENAME']

This is a decidedly harder way to do this, but it does work. It requires knowledge of the base directory of your application, which could change from installation to installation, thus making a less easily portable function.

(:source lang=php linenum:)
<?php

define('APPBASE','myapp');

function get_app_root()
{
	/**
	 * Get the Application Root directory path. Used for finding files and directories on the server's file system
	 */
	$script_path_arr = split('/', dirname($_SERVER['SCRIPT_FILENAME'])); /* get the elements of the path to the current script */
	$app_path_arr = Array();
	foreach ($script_path_arr as $script_path_element) {
		$app_path_arr[] = $script_path_element;
		if ($script_path_element == APPBASE) break; /* stop processing when we get to the application base dir */
	}
	return (!empty($app_path_arr) ? DIRECTORY_SEPARATOR .  join(DIRECTORY_SEPARATOR,$app_path_arr) . DIRECTORY_SEPARATOR : NULL); /* path to application root */
}

define('APP_ROOT', get_app_root());
?>
(:sourceend:)


!!Getting the URI base path to the application

Similarly to the file system application root, often times you want the path to the application's root as called by the client's browser. In this case, you could something similar to both the methods above:

!!!Method One

Gather up the path name from $_SERVER['SCRIPT_NAME']
(:source lang=php:)
define('APP_URI_BASE',isset($_SERVER['SCRIPT_NAME'] )? dirname($_SERVER['SCRIPT_NAME']).DIRECTORY_SEPARATOR : NULL;
(:sourceend:)

[-''(Note: $_SERVER['SCRIPT_NAME'] will '''only''' be set when called from a server context.)''-]

Note that this has both the same advantages and disadvantages of getting the application's root file system directory.

!!!Method Two

Note: APPBASE is defined as above.

(:source lang=php linenum:)
<?php
function get_uri_base()
{
	if (!isset($_SERVER['SCRIPT_NAME'])) return NULL; // if no script name, this can't be called as a URI
	
	/**
	 * Get the Application URI path. Used for creating URI's for elements in the application that are called through the web server
	 */
	$script_uri_path_arr = split(DIRECTORY_SEPARATOR, dirname($_SERVER['SCRIPT_NAME'])); /* get the elements of the URI path to the current script */
	//debug_var("\$script_uri_path_arr",$script_uri_path_arr);
	foreach ($script_uri_path_arr as $script_uri_path_element) {
		$app_uri_base_arr[] = $script_uri_path_element;
		if ($script_uri_path_element == APPBASE) break; /* stop processing when we get to the application base dir */
	}
	return (!empty($script_uri_path_arr) ? DIRECTORY_SEPARATOR . join(DIRECTORY_SEPARATOR,$script_uri_path_arr) : NULL);
}

define('APP_URI_BASE',get_uri_base());
?>
(:sourcend:)

>>comment<<
Keep metadata at end of page

Summary:In an application, it's often necessary to know where the root of the application is
Parent:(Technology.)PHP
IncludeMe:[[Technology.PHP]]
Categories:[[!Article]],[[!HowTos]]
Tags: php, how to, web development
(:tags-hide php, how to, web development :)
>><<




