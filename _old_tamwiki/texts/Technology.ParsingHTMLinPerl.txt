>>comment<<
Summary:a few ways to parse HTML in perl
Parent:(Technology.)Perl
IncludeMe:[[(Technology.)Perl]]
Categories:[[!Articles]]
Tags: perl, html, parsing
(:tags-hide perl, html, parsing :)
>><<

[[#excerpt]]
HTML has been claimed to be impossible to parse using regular expressions. Thus, many different parsers and modules have been created to do just that. Here are some of the ones I've used to some success.
[[#excerptend]]


!! HTML::Parser
This is the basic one I started with, and it is fairly complicated to understand how one does this. The documentation is not very good at explaining what is possible, but the examples given in the source distribution help a great deal.

(:source lang=perl linenum tabwidth=4 header="HTML::Parser basic usage":)
use HTML::Parser ();

# Create parser object
$p = HTML::Parser->new( api_version => 3,
                        start_h => [\&start, "tagname, self"],
                        end_h   => [\&end,   "tagname"],
);

# set up handlers for dealing with the parsed elements
sub start {
   my ($tag,$self) = @_;
   # $tag = the name of that ('a','img','div','p', etc)
   # $self = reference to the current tag

   # do something at the beginning of the tag ...

}

sub end {
   my ($tag) = @_;

   # do something at the end of the tag ...

}

# Parse directly from file
$p->parse_file("foo.html");
# or
open(my $fh, "<:utf8", "foo.html") || die;
$p->parse_file($fh);

# OR.. parse html already in a variable
$p->parse($html);
(:sourceend:)

!! Getting the title of a document

(:source lang=perl linenum tabwidth=4 -getcode header="parsing the document to get just the title":)
#!/usr/bin/perl

# This program will print out the title of an HTML document.

use strict;
use HTML::Parser ();

sub title_handler
{
    my $self = shift;
    # Add a couple of handlers to this branch of the parse tree
    # print out just the inner text of the <title>...</title> node
    $self->handler(text => sub { print @_ }, "dtext");
    # don't bother processing any more after this point
    $self->handler(end  => "eof", "self");
}

my $p = HTML::Parser->new(
          api_version => 3,
          # set the handler for the start of each tag
          start_h => [\&title_handler, "self"],
          # only report the <title> tag
          report_tags => ['title'],
);

# Parse the html file specified on the command line
$p->parse_file(shift || die) || die $!;
print "\n";
(:sourceend:)


!! Stripping html of comments


