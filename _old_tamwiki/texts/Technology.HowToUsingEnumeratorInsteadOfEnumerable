>>comment<<
Summary: An alternative to mixing Enumerable into your classes to get similar capability
Parent: (Technology.)Ruby
IncludeMe: [[(Technology.)Ruby]]
Categories: [[!HowTos]], [[!Technology]], [[!Ruby]]
Tags: ruby, enumerator, enumerable
(:tags-hide ruby, enumerator, enumerable:)
Source: http://blog.arkency.com/2014/01/ruby-to-enum-for-enumerator/
Posted: Mon Jan 13 11:51:26 2014
(:title How To: Use Enumerator instead of Enumerable:)
>><<

[[#excerpt]]
Over in {$:Source},
[[ http://blog.arkency.com/by/pankowecki/ | Robert Pankowecki]]
talks about when to think of using the (probably
underutilized) [@Enumerator@] instead of mixing in [@Enumerable@] to
give your class the ability to handle [@each@], [@each.with_index@]
and other such goodies from [@Enumerable@] but in the cases where your
class is ''not actually implementing a collection''.
[[#excerptend]]


>>quote<<
!!TLDR

To be consistent with Ruby Standard Library behavior, please return Enumerator for your yielding methods when block is not provided. Use this code

(:source lang=ruby:)
return enum_for(:your_method_name_which_is_usually_each) unless block_given?`
(:sourceend:)

to just do that.

Your class does not always need to be Enumerable. It is ok if it just returns Enumerator.
>><<

!! References:

* [[ http://ruby-doc.org/core-2.1.0/Object.html#method-i-to_enum |  Object#to_enum]]
  
* [[ http://ruby-doc.org/core-2.1.0/Object.html#method-i-enum_for |  Object#enum_for ]]

* [[ http://ruby-doc.org/core-2.1.0/Enumerator.html#method-c-new |  Enumerator#new ]]  


