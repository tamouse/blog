[[#excerpt]]
Snarfed from http://themurrays.homeip.net/downloads/tivo/s2_hacking/seriesii-mlar.txt
[[#excerptend]]


(:source lang=email:)
From: http://www.dealdatabase.com/forum/showthread.php?s=&threadid=30003
Author: Sleeper
Date: 12-02-2003
(:sourceend:)

Yes, you can hack a Series2

Okay, I'm a total newbie at this. I've never hacked a `TiVo before. I haven't used Linux at all for the last 3 years or so. I decided to try out Tiger's suggestion on how to get a bash prompt. While everything is still fresh in my head - here is how I did it:

First of all, you need a Linux installation. I grabbed one of my old PII-450 boxes and installed `RedHat 8.0 on it. I grabbed the A drive out of my `TiVo and put it into the machine, and tried to mount a partition.. No luck. As I said, I'm a newbie at this. I figured out that there is something in the kernel I need to patch. I couldn't find any patches for the 2.4.18 kernel, so I decided to look at an earlier patch and adapt it slightly.
Basically, you will need to recompile the kernel, and you will need to change a couple of lines in mac.c

In /usr/src/linux (or wherever you store your linux sources), head into fs/partitions and open up mac.c in an editor... Find a line looking something like this (this might vary depending on your kernel version):

(:source lang=bash:)
if (be16_to_cpu(md->signature) != MAC_DRIVER_MAGIC) {
(:sourceend:)


and replace it with:


(:source lang=bash:)
if (be16_to_cpu(md->signature) != 0x1492) {
(:sourceend:)

right after that if statement you will find a line that sets the sectorsize,
@@secsize = be16<something>@@, replace this with

(:source lang=bash:)
secsize = 512;
(:sourceend:)

All done. Recompile the kernel and remember to include support for Mac Partitions.

Also, please note that this patch breaks compatibility with Mac. For me, it didn't matter. For you, it might.

I was now able to boot up my machine and mount the partitions from my `TiVo disk.

Now, get bootpage.tgz from http://sekrut.net/~tivo/ and check what the boot parameters are, in my case:

(:source lang=bash:)
bootpage -p /dev/hda
(:sourceend:)

I got "root=/dev/hda7" back from this.. I mounted /dev/hda7,

(:source lang=bash:)
mount /dev/hda7 /mnt
(:sourceend:)

and looked at fstab,

(:source lang=bash:)
cat /mnt/etc/fstab
(:sourceend:)

and was told that the [@/var@] partition was on [@/dev/hda9@]. I unmounted [@/dev/hda7@] and mounted [@/dev/hda9@]

Now you need to generate the romfs image. first, create a new directory where you create the hacks file, I created a directory called img and put a file called hacks in there. I put the following in it (from Tiger),

(:source lang=bash header="hacks shell script":)
#!/bin/bash

export -n BASH_ENV
BASH_ENV=

(
exec 0<>/dev/null 1>&0 2>&1

while [ ! -d /var/hack ]; do
sleep 1
done
exec /var/hack/hackinit
) &
(:sourceend:)

make sure it is executable and readable by everyone

(:source lang=bash:)
chmod a+rwx hacks
(:sourceend:)

now, generate the romfs image. For this you need genromfs. If you don't already have it, Google is your friend.

(:source lang=bash:)
genromfs -f romfs.img -d img/
(:sourceend:)

this takes all the files from img/ and puts it into romfs.img. I got a file that was 1024 bytes long.. I dd'd this to /dev/hda16

(:source lang=bash:)
dd if=romfs.img of=/dev/hda16 bs=1024 count=1
(:sourceend:) 

All set. Next step is to update the boot parameters, using bootpage.

(:source lang=bash:)
bootpage -P "root=/dev/hda7 BASH_ENV=\`mount\$IFS-n\$IFS/dev/hda16\$IFS/mnt;echo\$IFS/mnt/hacks`" -C /dev/hda
(:sourceend:)
 
We now have a setup that will execute anything you put in /var/hack/hackinit.

I then ported tnlited to Series 2 using subuni's Series 2 MIPS Cross compiler. I applied the `TiVO patches to it and compiled it.. worked out of the box. I also downloaded a bunch of precompiled binaries from http://sekrut.net/~tivo/ and put them in /var/hack/bin

My [@/var/hack/hackinit@] contains this:

(:source lang=bash:)
#!/bin/bash
/var/hack/bin/tnlited 23 /bin/bash
(:sourceend:)

I also made sure that all files in /var/hack were executable and readable by everyone,

(:source lang=bash:)
chown -R a+rwx /var/hack
(:sourceend:)

That's it. I plugged my A drive back in, restarted the `TiVO, and voila! It worked.

A big thanks to Tiger for releasing the solution and subuni for the
cross compiler and tools.

(:source lang=bash:)
bash-2.02# uname -a
Linux (none) 2.4.4-`TiVo-3.0 #11 Wed May 8 15:40:02 PDT 2002 mips unknown
bash-2.02#
(:sourceend:)

(:Summary:a series of hacks one can do on a Series II Tivo:)
(:Parent:(Technology.)Tivo:)
(:IncludeMe:[[(Technology.)Tivo]]:)
(:Categories:[[!Articles]]:)
(:Tags: tivo, hacking:)
(:tags-hide tivo, hacking :)

