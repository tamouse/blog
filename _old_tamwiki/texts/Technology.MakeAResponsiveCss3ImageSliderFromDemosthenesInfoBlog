(:nolinkwikiwords:)
!! Make a Responsive CSS3 Image Slider

Link: [[http://demosthenes.info:80/blog/627/Make-A-Responsive-CSS3-Image-Slider | Make A Responsive CSS3 Image Slider]]

>>quote<<

Previously, I&rsquo;ve demonstrated how to make a [[http://demosthenes.info:80/blog/495/Make-A-CSS3-Animated-Image-Slider | fixed-width CSS image slider]]. Increasingly, web developers desire solutions that not only scale across viewport sizes, but perform well on [[http://demosthenes.info:80/blog/mobile | mobile]] devices. The responsive solution detailed here is particularly well-suited to those goals, as it avoids JavaScript entirely, running purely in CSS3 (and thus '''faster, smoother, and with less overhead''').

The idea is very similar to the previous example: an &ldquo;imagestrip&rdquo; containing all the photographs of our slider moving inside a window element which works to restrict the visibility of elements outside it. For this example, you&rsquo;ll need four images, although in practice you could make a strip with as many images as you wished. The sole condition is that all the images must be exactly the same size.

!! Create A Responsive Frame

First, we need to make the window element responsive. We do this by inserting a copy of one of the images from the slider inside the element, and setting an appropriate inline style:

(:source lang=html5 linenum:)
<div id="window">
   <img src="austin-fireworks.jpg" alt="" style="max-width: 100%;">
</div>
(:sourceend:)

(I&rsquo;m leaving the @@alt@@ attribute blank to save on space; in production, it would be filled out appropriately for [[http://demosthenes.info:80/blog/accessibility | accessibility]] and [[http://demosthenes.info:80/blog/SEO | SEO]] purposes).

The window is given a @@max-width@@ that corresponds to the natural width of the image (1000px, in the case of the example), as we don&rsquo;t want to show more of the imagestrip than one image. All images are floated left to remove space at the bottom of their containers.

(:source lang=css linenum:)
div#window {
   max-width: 1000px;
   position: relative;
   overflow: hidden;
}
img { float: left; }
(:sourceend:)


!! Design a Strip of Images

With the placeholder image added, we can create the interior imagestrip. This will immediately obscure the placeholder, but that&rsquo;s okay: '''the sole purpose of the placeholder is to make the window responsive'''; it doesn&rsquo;t need to be visible.

Our HTML becomes:

(:source lang=html5 linenum:)
<div id="window">
   <img src="austin-fireworks.jpg" alt="" style="max-width: 100%;">
   <figure id="imagestrip">
      <img src="austin-fireworks.jpg" alt="">
      <img src="taj-mahal.jpg" alt="">
      <img src="ibiza.jpg" alt="">
      <img src="ankor-wat.jpg" alt="">
      <img src="austin-fireworks.jpg" alt="">
   </figure>
</div>
(:sourceend:)

Note that the same image is placed at the start and end of the strip, allowing the animation to repeat in a smooth loop.

In our CSS, the width of @@#window@@ is described as a percentage multiplier of the @@div@@ that contains it. That is, if imagestrip contains five images, and the @@div@@ shows just one, the @@figure@@ is 5x wider, or 500% the width of the container @@div@@.&nbsp; It&rsquo;s also positioned absolutely, enabling us to describe its position relative to its container.

(:source lang=css linenum:)
figure#imagestrip {
   position: absolute;
   width: 500%;
   margin: 0;
   top: 0;
   left: 0;
}
(:sourceend:)


We have to evenly divide the photographs inside the imagestrip. We could use a layout such as flexbox to do so, but the math in standard CSS is very simple. If we consider the @@figure@@ element to be 100% wide, each image needs to take up 1/5 of the horizontal space:

     100% &divide; 5 = 20%

Which leads to the following CSS declaration:

(:source lang=css:)
figure#imagestrip img {
   float: left;
   width: 20%;
}
(:sourceend:)


!! Animate The Strip

Finally, we have to get the imagestrip moving from left to right. If the containing @@div@@ is 100% wide, then each movement of the imagestrip to the left will be measured in increments of that distance:

(:source lang=css linenum:)
@keyframes slidy {
   20% { left: 0%; }
   25% { left: -100%; }
   45% { left: -100%; }
   50% { left: -200%; }
   70% { left: -200%; }
   75% { left: -300%; }
   95% { left: -300%; }
   100% { left: -400%; }&nbsp;
}
(:sourceend:)

Each image in the slider will stay framed in the @@div@@ for 20% of the total length of the animation, and move for 5%.

We have to call on the animation to get things started:

(:source lang=css linenum:)
figure { 
   position: absolute;
   width: 500%;
   margin: 0;
   top: 0;
   left: 0;
   animation: 30s slidy ease-in-out infinite;
}
(:sourceend:)

As you can see, making a responsive slider is in many ways easier than making a fixed one.

'-(Both the keyframes and animation code is shown without [[http://demosthenes.info:80/blog/217/CSS3-Vendor-Prefixes | vendor prefixes]] in order to save on space &ndash; you can resize your browser window to see the effect on the slider. Images by the always-excellent [[http://stuckincustoms.com | Trey Radcliff]], used with permission).-'
!! creative commons licensed

The content of this blog is free to use in whatever way you wish under the [[http://creativecommons.org/licenses/by-nc-sa/2.5/ca | Creative Commons license]].

(:linkwikiwords:)
>><<

>>comment<<
Summary: An animated gallery that works on all screens and devices. A how-to on making an image slider in pure CSS3 that is responsive (i.e. in this case fluid) to container size
Tags: css, css3, howtos, web design, image slider, responsive design, fluid design
(:tags-hide css, css3, howtos, web design, image slider, responsive design, fluid design:)
(:title Make A Responsive CSS3 Image Slider:)
Source: http://demosthenes.info/blog/627/Make-A-Responsive-CSS3-Image-Slider
Parent: (Technology.)CSS
includeme:[[Technology.CSS]]
Categories:[[!HowTos]], [[!Design]], [[!Archives]], [[!CSS]]
>><<

Page saved at: Sun, 09 Dec 2012 14:15:18 -0600


